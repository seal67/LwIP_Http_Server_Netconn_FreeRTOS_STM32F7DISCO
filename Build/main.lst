ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 53746172 		.ascii	"Start\000"
  17      7400
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.Error_Handler,"ax",%progbits
  22              		.align	1
  23              		.arch armv7e-m
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  27              		.fpu fpv5-sp-d16
  29              	Error_Handler:
  30              	.LFB177:
  31              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * @file    LwIP/LwIP_HTTP_Server_Netconn_RTOS/Src/main.c 
   4:Src/main.c    ****   * @author  MCD Application Team
   5:Src/main.c    ****   * @brief   This sample code implements a http server application based on 
   6:Src/main.c    ****   *          Netconn API of LwIP stack and FreeRTOS. This application uses 
   7:Src/main.c    ****   *          STM32F7xx the ETH HAL API to transmit and receive data. 
   8:Src/main.c    ****   *          The communication is done with a web browser of a remote PC.
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   * @attention
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics International N.V. 
  13:Src/main.c    ****   * All rights reserved.</center></h2>
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 2


  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  31:Src/main.c    ****   *    this license. 
  32:Src/main.c    ****   *
  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include <string.h>
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** #include "ethernetif.h"
  53:Src/main.c    **** #include "lwip/netif.h"
  54:Src/main.c    **** #include "lwip/tcpip.h"
  55:Src/main.c    **** #include "app_ethernet.h"
  56:Src/main.c    **** #include "httpserver-netconn.h"
  57:Src/main.c    **** #include "lcd_log.h"
  58:Src/main.c    **** 
  59:Src/main.c    **** #include "api.h"
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  62:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  63:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  64:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  65:Src/main.c    **** struct netif gnetif; /* network interface structure */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** static void SystemClock_Config(void);
  69:Src/main.c    **** static void StartThread(void const * argument);
  70:Src/main.c    **** static void BSP_Config(void);
  71:Src/main.c    **** static void Netif_Config(void);
  72:Src/main.c    **** static void MPU_Config(void);
  73:Src/main.c    **** static void Error_Handler(void);
  74:Src/main.c    **** static void CPU_CACHE_Enable(void);
  75:Src/main.c    **** 
  76:Src/main.c    **** static void tcpecho_thread(void *arg);
  77:Src/main.c    **** 
  78:Src/main.c    **** /* Private functions ---------------------------------------------------------*/
  79:Src/main.c    **** 
  80:Src/main.c    **** /**
  81:Src/main.c    ****   * @brief  Main program
  82:Src/main.c    ****   * @param  None
  83:Src/main.c    ****   * @retval None
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 3


  84:Src/main.c    ****   */
  85:Src/main.c    **** int main(void)
  86:Src/main.c    **** {
  87:Src/main.c    ****   /* Configure the MPU attributes as Device memory for ETH DMA descriptors */
  88:Src/main.c    ****   MPU_Config();
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Enable the CPU Cache */
  91:Src/main.c    ****   CPU_CACHE_Enable();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* STM32F7xx HAL library initialization:
  94:Src/main.c    ****        - Configure the Flash ART accelerator on ITCM interface
  95:Src/main.c    ****        - Configure the Systick to generate an interrupt each 1 msec
  96:Src/main.c    ****        - Set NVIC Group Priority to 4
  97:Src/main.c    ****        - Global MSP (MCU Support Package) initialization
  98:Src/main.c    ****      */
  99:Src/main.c    ****   HAL_Init();  
 100:Src/main.c    ****   
 101:Src/main.c    ****   /* Configure the system clock to 200 MHz */
 102:Src/main.c    ****   SystemClock_Config(); 
 103:Src/main.c    ****   
 104:Src/main.c    ****   /* Init thread */
 105:Src/main.c    **** #if defined(__GNUC__)
 106:Src/main.c    ****   osThreadDef(Start, StartThread, osPriorityNormal, 0, configMINIMAL_STACK_SIZE * 5);
 107:Src/main.c    **** #else
 108:Src/main.c    ****   osThreadDef(Start, StartThread, osPriorityNormal, 0, configMINIMAL_STACK_SIZE * 2);
 109:Src/main.c    **** #endif
 110:Src/main.c    ****   
 111:Src/main.c    ****   osThreadCreate (osThread(Start), NULL);
 112:Src/main.c    ****   
 113:Src/main.c    ****   /* Start scheduler */
 114:Src/main.c    ****   osKernelStart();
 115:Src/main.c    ****   
 116:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 117:Src/main.c    ****   for( ;; );
 118:Src/main.c    **** }
 119:Src/main.c    **** 
 120:Src/main.c    **** /**
 121:Src/main.c    ****   * @brief  Start Thread 
 122:Src/main.c    ****   * @param  argument not used
 123:Src/main.c    ****   * @retval None
 124:Src/main.c    ****   */
 125:Src/main.c    **** static void StartThread(void const * argument)
 126:Src/main.c    **** { 
 127:Src/main.c    ****   /* Initialize LCD */
 128:Src/main.c    ****   BSP_Config();
 129:Src/main.c    ****   
 130:Src/main.c    ****   /* Create tcp_ip stack thread */
 131:Src/main.c    ****   tcpip_init(NULL, NULL);
 132:Src/main.c    ****   
 133:Src/main.c    ****   /* Initialize the LwIP stack */
 134:Src/main.c    ****   Netif_Config();
 135:Src/main.c    ****   
 136:Src/main.c    ****   /* Initialize webserver demo */
 137:Src/main.c    ****   http_server_netconn_init();
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* Initialize the TCP echo server */
 140:Src/main.c    ****   sys_thread_new("tcpecho_thread", tcpecho_thread, NULL, DEFAULT_THREAD_STACKSIZE, osPriorityAboveN
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 4


 141:Src/main.c    ****   /* Notify user about the network interface config */
 142:Src/main.c    ****   User_notification(&gnetif);
 143:Src/main.c    ****   
 144:Src/main.c    **** #ifdef USE_DHCP
 145:Src/main.c    ****   /* Start DHCPClient */
 146:Src/main.c    ****   osThreadDef(DHCP, DHCP_thread, osPriorityBelowNormal, 0, configMINIMAL_STACK_SIZE * 2);
 147:Src/main.c    ****   osThreadCreate (osThread(DHCP), &gnetif);
 148:Src/main.c    **** #endif
 149:Src/main.c    **** 
 150:Src/main.c    ****   for( ;; )
 151:Src/main.c    ****   {
 152:Src/main.c    ****     /* Delete the Init Thread */ 
 153:Src/main.c    ****     osThreadTerminate(NULL);
 154:Src/main.c    ****   }
 155:Src/main.c    **** }
 156:Src/main.c    **** 
 157:Src/main.c    **** static void tcpecho_thread(void *arg)
 158:Src/main.c    **** {
 159:Src/main.c    ****   /* Create a new connection identifier. */
 160:Src/main.c    **** 
 161:Src/main.c    ****   err_t err,accept_err,recv_err;
 162:Src/main.c    ****   char logbuf[256];
 163:Src/main.c    ****   void *data;
 164:Src/main.c    ****   u16_t len;
 165:Src/main.c    ****   struct netconn *newconn;
 166:Src/main.c    ****   struct netbuf *buf;
 167:Src/main.c    ****   struct netconn *conn = netconn_new(NETCONN_TCP);
 168:Src/main.c    **** 
 169:Src/main.c    ****   if (conn!=NULL)
 170:Src/main.c    ****   {
 171:Src/main.c    ****     /* Bind connection to well known port number 7. */
 172:Src/main.c    ****     err = netconn_bind(conn, NULL, 7);
 173:Src/main.c    ****     if (err == ERR_OK)
 174:Src/main.c    ****     {      
 175:Src/main.c    ****       /* Tell connection to go into listening mode. */
 176:Src/main.c    ****       netconn_listen(conn);
 177:Src/main.c    ****       while (1)
 178:Src/main.c    ****       {
 179:Src/main.c    ****         /* Grab new connection. */
 180:Src/main.c    ****         accept_err = netconn_accept(conn, &newconn);
 181:Src/main.c    ****         /* Process the new connection. */
 182:Src/main.c    ****         if (accept_err == ERR_OK)
 183:Src/main.c    ****         {
 184:Src/main.c    ****           while (( recv_err = netconn_recv(newconn, &buf)) == ERR_OK)
 185:Src/main.c    ****           {
 186:Src/main.c    ****             do
 187:Src/main.c    ****             {
 188:Src/main.c    ****               netbuf_data(buf, &data, &len);
 189:Src/main.c    ****               netconn_write(newconn, data, len, NETCONN_COPY); 
 190:Src/main.c    ****               memcpy(&logbuf, data,len);
 191:Src/main.c    ****               logbuf[len] = 0;
 192:Src/main.c    ****               LCD_UsrLog("%s",logbuf);
 193:Src/main.c    ****             } while (netbuf_next(buf) >= 0);
 194:Src/main.c    ****             netbuf_delete(buf);
 195:Src/main.c    ****           }
 196:Src/main.c    ****           /* Close connection and discard connection identifier. */
 197:Src/main.c    ****           netconn_close(newconn);
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 5


 198:Src/main.c    ****           netconn_delete(newconn);
 199:Src/main.c    ****         }
 200:Src/main.c    ****       }
 201:Src/main.c    ****     }
 202:Src/main.c    ****     else
 203:Src/main.c    ****     {
 204:Src/main.c    ****       netconn_delete(newconn);
 205:Src/main.c    ****     }     
 206:Src/main.c    ****   }
 207:Src/main.c    **** }
 208:Src/main.c    **** 
 209:Src/main.c    **** /**
 210:Src/main.c    ****   * @brief  Initializes the lwIP stack
 211:Src/main.c    ****   * @param  None
 212:Src/main.c    ****   * @retval None
 213:Src/main.c    ****   */
 214:Src/main.c    **** static void Netif_Config(void)
 215:Src/main.c    **** { 
 216:Src/main.c    ****   ip_addr_t ipaddr;
 217:Src/main.c    ****   ip_addr_t netmask;
 218:Src/main.c    ****   ip_addr_t gw;
 219:Src/main.c    ****  
 220:Src/main.c    **** #ifdef USE_DHCP
 221:Src/main.c    ****   ip_addr_set_zero_ip4(&ipaddr);
 222:Src/main.c    ****   ip_addr_set_zero_ip4(&netmask);
 223:Src/main.c    ****   ip_addr_set_zero_ip4(&gw);
 224:Src/main.c    **** #else
 225:Src/main.c    ****   IP_ADDR4(&ipaddr,IP_ADDR0,IP_ADDR1,IP_ADDR2,IP_ADDR3);
 226:Src/main.c    ****   IP_ADDR4(&netmask,NETMASK_ADDR0,NETMASK_ADDR1,NETMASK_ADDR2,NETMASK_ADDR3);
 227:Src/main.c    ****   IP_ADDR4(&gw,GW_ADDR0,GW_ADDR1,GW_ADDR2,GW_ADDR3);
 228:Src/main.c    **** #endif /* USE_DHCP */
 229:Src/main.c    ****   
 230:Src/main.c    ****   netif_add(&gnetif, &ipaddr, &netmask, &gw, NULL, &ethernetif_init, &tcpip_input);
 231:Src/main.c    ****   
 232:Src/main.c    ****   /*  Registers the default network interface. */
 233:Src/main.c    ****   netif_set_default(&gnetif);
 234:Src/main.c    ****   
 235:Src/main.c    ****   if (netif_is_link_up(&gnetif))
 236:Src/main.c    ****   {
 237:Src/main.c    ****     /* When the netif is fully configured this function must be called.*/
 238:Src/main.c    ****     netif_set_up(&gnetif);
 239:Src/main.c    ****   }
 240:Src/main.c    ****   else
 241:Src/main.c    ****   {
 242:Src/main.c    ****     /* When the netif link is down this function must be called */
 243:Src/main.c    ****     netif_set_down(&gnetif);
 244:Src/main.c    ****   }
 245:Src/main.c    **** }
 246:Src/main.c    **** 
 247:Src/main.c    **** /**
 248:Src/main.c    ****   * @brief  Initializes the STM327546G-Discovery's LCD  resources.
 249:Src/main.c    ****   * @param  None
 250:Src/main.c    ****   * @retval None
 251:Src/main.c    ****   */
 252:Src/main.c    **** static void BSP_Config(void)
 253:Src/main.c    **** {
 254:Src/main.c    ****   /* Initialize the LCD */
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 6


 255:Src/main.c    ****   BSP_LCD_Init();
 256:Src/main.c    ****   
 257:Src/main.c    ****   /* Initialize the LCD Layers */
 258:Src/main.c    ****   BSP_LCD_LayerDefaultInit(1, LCD_FB_START_ADDRESS);
 259:Src/main.c    ****   
 260:Src/main.c    ****   /* Set LCD Foreground Layer  */
 261:Src/main.c    ****   BSP_LCD_SelectLayer(1);
 262:Src/main.c    ****   
 263:Src/main.c    ****   BSP_LCD_SetFont(&LCD_DEFAULT_FONT);
 264:Src/main.c    ****   
 265:Src/main.c    ****   /* Initialize LCD Log module */
 266:Src/main.c    ****   LCD_LOG_Init();
 267:Src/main.c    ****   
 268:Src/main.c    ****   /* Show Header and Footer texts */
 269:Src/main.c    ****   LCD_LOG_SetHeader((uint8_t *)"Webserver Application Netconn API");
 270:Src/main.c    ****   LCD_LOG_SetFooter((uint8_t *)"STM32746G-DISCO board");
 271:Src/main.c    ****   
 272:Src/main.c    ****   LCD_UsrLog ((char *)"  State: Ethernet Initialization ...\n");
 273:Src/main.c    **** }
 274:Src/main.c    **** 
 275:Src/main.c    **** /**
 276:Src/main.c    ****   * @brief  System Clock Configuration
 277:Src/main.c    ****   *         The system Clock is configured as follow : 
 278:Src/main.c    ****   *            System Clock source            = PLL (HSE)
 279:Src/main.c    ****   *            SYSCLK(Hz)                     = 200000000
 280:Src/main.c    ****   *            HCLK(Hz)                       = 200000000
 281:Src/main.c    ****   *            AHB Prescaler                  = 1
 282:Src/main.c    ****   *            APB1 Prescaler                 = 4
 283:Src/main.c    ****   *            APB2 Prescaler                 = 2
 284:Src/main.c    ****   *            HSE Frequency(Hz)              = 25000000
 285:Src/main.c    ****   *            PLL_M                          = 25
 286:Src/main.c    ****   *            PLL_N                          = 432
 287:Src/main.c    ****   *            PLL_P                          = 2
 288:Src/main.c    ****   *            PLL_Q                          = 9
 289:Src/main.c    ****   *            VDD(V)                         = 3.3
 290:Src/main.c    ****   *            Main regulator output voltage  = Scale1 mode
 291:Src/main.c    ****   *            Flash Latency(WS)              = 7
 292:Src/main.c    ****   * @param  None
 293:Src/main.c    ****   * @retval None
 294:Src/main.c    ****   */
 295:Src/main.c    **** static void SystemClock_Config(void)
 296:Src/main.c    **** {
 297:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 298:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 299:Src/main.c    **** 
 300:Src/main.c    ****   /* Enable HSE Oscillator and activate PLL with HSE as source */
 301:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 302:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 303:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
 304:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 305:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 306:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 307:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 308:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 309:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 310:Src/main.c    ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 311:Src/main.c    ****   {
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 7


 312:Src/main.c    ****     Error_Handler();
 313:Src/main.c    ****   }
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* activate the OverDrive */
 316:Src/main.c    ****   if(HAL_PWREx_EnableOverDrive() != HAL_OK)
 317:Src/main.c    ****   {
 318:Src/main.c    ****     Error_Handler();
 319:Src/main.c    ****   }
 320:Src/main.c    ****   
 321:Src/main.c    ****   /* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 
 322:Src/main.c    ****      clocks dividers */
 323:Src/main.c    ****   RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 324:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 325:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 326:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;  
 327:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;  
 328:Src/main.c    ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 329:Src/main.c    ****   {
 330:Src/main.c    ****     Error_Handler();
 331:Src/main.c    ****   }
 332:Src/main.c    **** }
 333:Src/main.c    **** 
 334:Src/main.c    **** /**
 335:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 336:Src/main.c    ****   * @param  None
 337:Src/main.c    ****   * @retval None
 338:Src/main.c    ****   */
 339:Src/main.c    **** static void Error_Handler(void)
 340:Src/main.c    **** {
  32              		.loc 1 340 1 view -0
  33              		.cfi_startproc
  34              		@ Volatile: function does not return.
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              		@ link register save eliminated.
  38              	.L2:
 341:Src/main.c    ****   /* User may add here some code to deal with this error */
 342:Src/main.c    ****   while(1)
  39              		.loc 1 342 3 discriminator 1 view .LVU1
 343:Src/main.c    ****   {
 344:Src/main.c    ****   }
  40              		.loc 1 344 3 discriminator 1 view .LVU2
 342:Src/main.c    ****   {
  41              		.loc 1 342 8 discriminator 1 view .LVU3
  42 0000 FEE7     		b	.L2
  43              		.cfi_endproc
  44              	.LFE177:
  46              		.section	.text.CPU_CACHE_Enable,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv5-sp-d16
  53              	CPU_CACHE_Enable:
  54              	.LFB179:
 345:Src/main.c    **** }
 346:Src/main.c    **** 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 8


 347:Src/main.c    **** /**
 348:Src/main.c    ****   * @brief  Configure the MPU attributes .
 349:Src/main.c    ****   * @param  None
 350:Src/main.c    ****   * @retval None
 351:Src/main.c    ****   */
 352:Src/main.c    **** static void MPU_Config(void)
 353:Src/main.c    **** {
 354:Src/main.c    ****   MPU_Region_InitTypeDef MPU_InitStruct;
 355:Src/main.c    ****   
 356:Src/main.c    ****   /* Disable the MPU */
 357:Src/main.c    ****   HAL_MPU_Disable();
 358:Src/main.c    ****   
 359:Src/main.c    ****   /* Configure the MPU as Normal Non Cacheable for Ethernet Buffers in the SRAM2 */
 360:Src/main.c    ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 361:Src/main.c    ****   MPU_InitStruct.BaseAddress = 0x2004C000;
 362:Src/main.c    ****   MPU_InitStruct.Size = MPU_REGION_SIZE_16KB;
 363:Src/main.c    ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 364:Src/main.c    ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 365:Src/main.c    ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 366:Src/main.c    ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 367:Src/main.c    ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 368:Src/main.c    ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL1;
 369:Src/main.c    ****   MPU_InitStruct.SubRegionDisable = 0x00;
 370:Src/main.c    ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 371:Src/main.c    **** 
 372:Src/main.c    ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 373:Src/main.c    ****   
 374:Src/main.c    ****   /* Configure the MPU as Device for Ethernet Descriptors in the SRAM2 */
 375:Src/main.c    ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 376:Src/main.c    ****   MPU_InitStruct.BaseAddress = 0x2004C000;
 377:Src/main.c    ****   MPU_InitStruct.Size = MPU_REGION_SIZE_256B;
 378:Src/main.c    ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 379:Src/main.c    ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;
 380:Src/main.c    ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 381:Src/main.c    ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 382:Src/main.c    ****   MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 383:Src/main.c    ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 384:Src/main.c    ****   MPU_InitStruct.SubRegionDisable = 0x00;
 385:Src/main.c    ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 386:Src/main.c    **** 
 387:Src/main.c    ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 388:Src/main.c    ****   
 389:Src/main.c    ****   /* Enable the MPU */
 390:Src/main.c    ****   HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 391:Src/main.c    **** }
 392:Src/main.c    **** 
 393:Src/main.c    **** /**
 394:Src/main.c    ****   * @brief  CPU L1-Cache enable.
 395:Src/main.c    ****   * @param  None
 396:Src/main.c    ****   * @retval None
 397:Src/main.c    ****   */
 398:Src/main.c    **** static void CPU_CACHE_Enable(void)
 399:Src/main.c    **** {
  55              		.loc 1 399 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 9


  59              		@ link register save eliminated.
  60 0000 10B4     		push	{r4}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 4, -4
 400:Src/main.c    ****   /* Enable I-Cache */
 401:Src/main.c    ****   SCB_EnableICache();
  64              		.loc 1 401 3 view .LVU5
  65              	.LBB60:
  66              	.LBI60:
  67              		.file 2 "Drivers/CMSIS/Core/Include/core_cm7.h"
   1:Drivers/CMSIS/Core/Include/core_cm7.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Core/Include/core_cm7.h ****  * @file     core_cm7.h
   3:Drivers/CMSIS/Core/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Core/Include/core_cm7.h ****  * @version  V5.0.8
   5:Drivers/CMSIS/Core/Include/core_cm7.h ****  * @date     04. June 2018
   6:Drivers/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Core/Include/core_cm7.h **** /*
   8:Drivers/CMSIS/Core/Include/core_cm7.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Core/Include/core_cm7.h ****  *
  10:Drivers/CMSIS/Core/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Core/Include/core_cm7.h ****  *
  12:Drivers/CMSIS/Core/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Core/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Core/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Core/Include/core_cm7.h ****  *
  16:Drivers/CMSIS/Core/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Core/Include/core_cm7.h ****  *
  18:Drivers/CMSIS/Core/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Core/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Core/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Core/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Core/Include/core_cm7.h ****  * limitations under the License.
  23:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
  24:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  25:Drivers/CMSIS/Core/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Core/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Core/Include/core_cm7.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Core/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif
  30:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  31:Drivers/CMSIS/Core/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:Drivers/CMSIS/Core/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  34:Drivers/CMSIS/Core/Include/core_cm7.h **** #include <stdint.h>
  35:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  36:Drivers/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Core/Include/core_cm7.h ****  extern "C" {
  38:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif
  39:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  40:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
  41:Drivers/CMSIS/Core/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Core/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  44:Drivers/CMSIS/Core/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Core/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 10


  47:Drivers/CMSIS/Core/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Core/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  50:Drivers/CMSIS/Core/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Core/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
  53:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  54:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  55:Drivers/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
  56:Drivers/CMSIS/Core/Include/core_cm7.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
  59:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
  61:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
  62:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  63:Drivers/CMSIS/Core/Include/core_cm7.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  65:Drivers/CMSIS/Core/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:Drivers/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:Drivers/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:Drivers/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Core/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  71:Drivers/CMSIS/Core/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  73:Drivers/CMSIS/Core/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Core/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Core/Include/core_cm7.h **** */
  76:Drivers/CMSIS/Core/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Core/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Core/Include/core_cm7.h ****     #else
  81:Drivers/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Core/Include/core_cm7.h ****     #endif
  84:Drivers/CMSIS/Core/Include/core_cm7.h ****   #else
  85:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
  87:Drivers/CMSIS/Core/Include/core_cm7.h **** 
  88:Drivers/CMSIS/Core/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Core/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
  90:Drivers/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Core/Include/core_cm7.h ****     #else
  93:Drivers/CMSIS/Core/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Core/Include/core_cm7.h ****     #endif
  96:Drivers/CMSIS/Core/Include/core_cm7.h ****   #else
  97:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
  99:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 100:Drivers/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Core/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 11


 104:Drivers/CMSIS/Core/Include/core_cm7.h ****     #else
 105:Drivers/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Core/Include/core_cm7.h ****     #endif
 108:Drivers/CMSIS/Core/Include/core_cm7.h ****   #else
 109:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 111:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 112:Drivers/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Core/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Core/Include/core_cm7.h ****     #else
 117:Drivers/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Core/Include/core_cm7.h ****     #endif
 120:Drivers/CMSIS/Core/Include/core_cm7.h ****   #else
 121:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 123:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 124:Drivers/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Core/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Core/Include/core_cm7.h ****     #else
 129:Drivers/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Core/Include/core_cm7.h ****     #endif
 132:Drivers/CMSIS/Core/Include/core_cm7.h ****   #else
 133:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 135:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 136:Drivers/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Core/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Core/Include/core_cm7.h ****     #else
 141:Drivers/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Core/Include/core_cm7.h ****     #endif
 144:Drivers/CMSIS/Core/Include/core_cm7.h ****   #else
 145:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 147:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 148:Drivers/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Core/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Core/Include/core_cm7.h ****     #else
 153:Drivers/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Core/Include/core_cm7.h ****     #endif
 156:Drivers/CMSIS/Core/Include/core_cm7.h ****   #else
 157:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 159:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 160:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 12


 161:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 162:Drivers/CMSIS/Core/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 164:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 165:Drivers/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Core/Include/core_cm7.h **** }
 167:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif
 168:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 169:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 171:Drivers/CMSIS/Core/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 173:Drivers/CMSIS/Core/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:Drivers/CMSIS/Core/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 176:Drivers/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Core/Include/core_cm7.h ****  extern "C" {
 178:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif
 179:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 180:Drivers/CMSIS/Core/Include/core_cm7.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Core/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Core/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:Drivers/CMSIS/Core/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 186:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 187:Drivers/CMSIS/Core/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Core/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 191:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 192:Drivers/CMSIS/Core/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Core/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 196:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 197:Drivers/CMSIS/Core/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:Drivers/CMSIS/Core/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 201:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 202:Drivers/CMSIS/Core/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:Drivers/CMSIS/Core/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 206:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 207:Drivers/CMSIS/Core/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:Drivers/CMSIS/Core/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 211:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 212:Drivers/CMSIS/Core/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:Drivers/CMSIS/Core/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 216:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 217:Drivers/CMSIS/Core/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 13


 218:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:Drivers/CMSIS/Core/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
 221:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif
 222:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 223:Drivers/CMSIS/Core/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 225:Drivers/CMSIS/Core/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 227:Drivers/CMSIS/Core/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:Drivers/CMSIS/Core/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:Drivers/CMSIS/Core/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:Drivers/CMSIS/Core/Include/core_cm7.h **** */
 231:Drivers/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 232:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:Drivers/CMSIS/Core/Include/core_cm7.h **** #else
 234:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif
 236:Drivers/CMSIS/Core/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:Drivers/CMSIS/Core/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 239:Drivers/CMSIS/Core/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:Drivers/CMSIS/Core/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:Drivers/CMSIS/Core/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:Drivers/CMSIS/Core/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 244:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 246:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 247:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 248:Drivers/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
 249:Drivers/CMSIS/Core/Include/core_cm7.h ****  *                 Register Abstraction
 250:Drivers/CMSIS/Core/Include/core_cm7.h ****   Core Register contain:
 251:Drivers/CMSIS/Core/Include/core_cm7.h ****   - Core Register
 252:Drivers/CMSIS/Core/Include/core_cm7.h ****   - Core NVIC Register
 253:Drivers/CMSIS/Core/Include/core_cm7.h ****   - Core SCB Register
 254:Drivers/CMSIS/Core/Include/core_cm7.h ****   - Core SysTick Register
 255:Drivers/CMSIS/Core/Include/core_cm7.h ****   - Core Debug Register
 256:Drivers/CMSIS/Core/Include/core_cm7.h ****   - Core MPU Register
 257:Drivers/CMSIS/Core/Include/core_cm7.h ****   - Core FPU Register
 258:Drivers/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
 259:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 260:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:Drivers/CMSIS/Core/Include/core_cm7.h **** */
 263:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 264:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 265:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
 269:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 270:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 271:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 272:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 274:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef union
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 14


 275:Drivers/CMSIS/Core/Include/core_cm7.h **** {
 276:Drivers/CMSIS/Core/Include/core_cm7.h ****   struct
 277:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
 278:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:Drivers/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:Drivers/CMSIS/Core/Include/core_cm7.h **** } APSR_Type;
 289:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 290:Drivers/CMSIS/Core/Include/core_cm7.h **** /* APSR Register Definitions */
 291:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 294:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 297:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 300:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 303:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 306:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:Drivers/CMSIS/Core/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 309:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 310:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 311:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 313:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef union
 314:Drivers/CMSIS/Core/Include/core_cm7.h **** {
 315:Drivers/CMSIS/Core/Include/core_cm7.h ****   struct
 316:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
 317:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:Drivers/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Drivers/CMSIS/Core/Include/core_cm7.h **** } IPSR_Type;
 322:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 323:Drivers/CMSIS/Core/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:Drivers/CMSIS/Core/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:Drivers/CMSIS/Core/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 327:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 328:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 329:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 331:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef union
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 15


 332:Drivers/CMSIS/Core/Include/core_cm7.h **** {
 333:Drivers/CMSIS/Core/Include/core_cm7.h ****   struct
 334:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
 335:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:Drivers/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:Drivers/CMSIS/Core/Include/core_cm7.h **** } xPSR_Type;
 350:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 351:Drivers/CMSIS/Core/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 355:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 358:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 361:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 364:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 367:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 370:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 373:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 376:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 379:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:Drivers/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 382:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 383:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 384:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 386:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef union
 387:Drivers/CMSIS/Core/Include/core_cm7.h **** {
 388:Drivers/CMSIS/Core/Include/core_cm7.h ****   struct
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 16


 389:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
 390:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:Drivers/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:Drivers/CMSIS/Core/Include/core_cm7.h **** } CONTROL_Type;
 397:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 398:Drivers/CMSIS/Core/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 402:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 405:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 408:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 410:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 411:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 412:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
 416:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 417:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 418:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 419:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 421:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef struct
 422:Drivers/CMSIS/Core/Include/core_cm7.h **** {
 423:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 427:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:Drivers/CMSIS/Core/Include/core_cm7.h **** }  NVIC_Type;
 437:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 438:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:Drivers/CMSIS/Core/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:Drivers/CMSIS/Core/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 442:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 444:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 445:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 17


 446:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
 450:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 451:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 452:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 453:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 455:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef struct
 456:Drivers/CMSIS/Core/Include/core_cm7.h **** {
 457:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 18


 503:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:Drivers/CMSIS/Core/Include/core_cm7.h **** } SCB_Type;
 508:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 509:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 513:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 516:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 519:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 522:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 525:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 529:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 532:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 535:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 538:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 541:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 544:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 547:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 550:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 553:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 556:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:Drivers/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 19


 560:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 564:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 567:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 570:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 573:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 576:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 579:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 582:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 586:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 589:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 592:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 596:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 599:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 602:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 605:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 608:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 611:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 614:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:Drivers/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 20


 617:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 620:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 624:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 627:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 630:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 633:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 636:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 639:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 642:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 645:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 648:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 651:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 654:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 657:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 660:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 663:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 667:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 670:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 673:Drivers/CMSIS/Core/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 21


 674:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 677:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 680:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 683:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 686:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 689:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 692:Drivers/CMSIS/Core/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 696:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 699:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 702:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 705:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 708:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 711:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 714:Drivers/CMSIS/Core/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 718:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 721:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 724:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 727:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 730:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 22


 731:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 733:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 737:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 740:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 743:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 747:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 750:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 753:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 756:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 759:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 763:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 766:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 770:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 773:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 776:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 779:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 782:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 786:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 23


 788:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 789:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 792:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 795:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 798:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 801:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 804:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 808:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 811:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 815:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 819:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 822:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 826:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 829:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 833:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 836:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 840:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 843:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 24


 845:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 846:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 849:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 853:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 856:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 859:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 862:Drivers/CMSIS/Core/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 866:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 869:Drivers/CMSIS/Core/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 873:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 876:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 879:Drivers/CMSIS/Core/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 883:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 886:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 889:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 893:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 896:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 899:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:Drivers/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 25


 902:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 905:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 908:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 910:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 911:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 912:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
 916:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 917:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 918:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 919:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 921:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef struct
 922:Drivers/CMSIS/Core/Include/core_cm7.h **** {
 923:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:Drivers/CMSIS/Core/Include/core_cm7.h **** } SCnSCB_Type;
 927:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 928:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 932:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 934:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 935:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 936:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 937:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 938:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 939:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 940:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 941:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 942:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 943:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 944:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 945:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 946:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 947:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 948:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 949:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 950:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 951:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
 952:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 953:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 954:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 955:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
 956:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 957:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 958:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 26


 959:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 960:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
 961:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef struct
 962:Drivers/CMSIS/Core/Include/core_cm7.h **** {
 963:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 964:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 965:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 966:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 967:Drivers/CMSIS/Core/Include/core_cm7.h **** } SysTick_Type;
 968:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 969:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 970:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 971:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 972:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 973:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 974:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 975:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 976:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 977:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 978:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 979:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 980:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 981:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 982:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 983:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 984:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 985:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 986:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 987:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 988:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 989:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 990:Drivers/CMSIS/Core/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 991:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 992:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 993:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 994:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 995:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 996:Drivers/CMSIS/Core/Include/core_cm7.h **** 
 997:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 998:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 999:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1000:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1001:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1002:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1003:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1004:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1005:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1006:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1007:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
1008:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1009:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1010:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1011:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1012:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1013:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef struct
1014:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1015:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  union
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 27


1016:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
1017:Drivers/CMSIS/Core/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1018:Drivers/CMSIS/Core/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1019:Drivers/CMSIS/Core/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1020:Drivers/CMSIS/Core/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1021:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1022:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1023:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1024:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1025:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1026:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1027:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1028:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1029:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1030:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1031:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1032:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1033:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1034:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1035:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1036:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1037:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1038:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1039:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1040:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1041:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1042:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1043:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1044:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1045:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1046:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1047:Drivers/CMSIS/Core/Include/core_cm7.h **** } ITM_Type;
1048:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1049:Drivers/CMSIS/Core/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1050:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1051:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1052:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1053:Drivers/CMSIS/Core/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1054:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1055:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1056:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1057:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1058:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1059:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1060:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1061:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1062:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1063:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1064:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1065:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1066:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1067:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1068:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1069:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1070:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1071:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1072:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 28


1073:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1074:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1075:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1076:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1077:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1078:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1079:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1080:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1081:Drivers/CMSIS/Core/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1082:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1083:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1084:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1085:Drivers/CMSIS/Core/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1086:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1087:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1088:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1089:Drivers/CMSIS/Core/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1090:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1091:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1092:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1093:Drivers/CMSIS/Core/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1094:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1095:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1096:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1097:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1098:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1099:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1100:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1101:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1102:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1103:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1104:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1105:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1106:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1107:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1108:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1109:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1110:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
1111:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1112:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1113:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1114:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1115:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1116:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef struct
1117:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1118:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1119:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1120:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1121:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1122:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1123:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1124:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1125:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1126:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1127:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1128:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1129:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 29


1130:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1131:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1132:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1133:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1134:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1135:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1136:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1137:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1138:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1139:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1140:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1141:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1142:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1143:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1144:Drivers/CMSIS/Core/Include/core_cm7.h **** } DWT_Type;
1145:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1146:Drivers/CMSIS/Core/Include/core_cm7.h **** /* DWT Control Register Definitions */
1147:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1148:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1149:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1150:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1151:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1152:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1153:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1154:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1155:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1156:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1157:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1158:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1159:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1160:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1161:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1162:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1163:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1164:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1165:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1166:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1167:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1168:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1169:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1170:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1171:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1172:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1173:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1174:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1175:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1176:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1177:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1178:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1179:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1180:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1181:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1182:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1183:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1184:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1185:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1186:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 30


1187:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1188:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1189:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1190:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1191:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1192:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1193:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1194:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1195:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1196:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1197:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1198:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1199:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1200:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1201:Drivers/CMSIS/Core/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1202:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1203:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1204:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1205:Drivers/CMSIS/Core/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1206:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1207:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1208:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1209:Drivers/CMSIS/Core/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1210:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1211:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1212:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1213:Drivers/CMSIS/Core/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1214:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1215:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1216:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1217:Drivers/CMSIS/Core/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1218:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1219:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1220:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1221:Drivers/CMSIS/Core/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1222:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1223:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1224:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1225:Drivers/CMSIS/Core/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1226:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1227:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1228:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1229:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1230:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1231:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1232:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1233:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1234:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1235:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1236:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1237:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1238:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1239:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1240:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1241:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1242:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1243:Drivers/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 31


1244:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1245:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1246:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1247:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1248:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1249:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1250:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1251:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1252:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1253:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1254:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1255:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1256:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1257:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1258:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1259:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1260:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
1261:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1262:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1263:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1264:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1265:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1266:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef struct
1267:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1268:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1269:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1270:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1271:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1272:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1273:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1274:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1275:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1276:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1277:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1278:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1279:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1280:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1281:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1282:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1283:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1284:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1285:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1286:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1287:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1288:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1289:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1290:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1291:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1292:Drivers/CMSIS/Core/Include/core_cm7.h **** } TPI_Type;
1293:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1294:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1295:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1296:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1297:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1298:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1299:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1300:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 32


1301:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1302:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1303:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1304:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1305:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1306:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1307:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1308:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1309:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1310:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1311:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1312:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1313:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1314:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1315:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1316:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1317:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1318:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1319:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1320:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1321:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1322:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1323:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1324:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1325:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1326:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1327:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1328:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1329:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1330:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1331:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1332:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1333:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1334:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1335:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1336:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1337:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1338:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1339:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1340:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1341:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1342:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1343:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1344:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1345:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1346:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1347:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1348:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1349:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1350:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1351:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1352:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1353:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1354:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1355:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1356:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1357:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 33


1358:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1359:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1360:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1361:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1362:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1363:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1364:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1365:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1366:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1367:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1368:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1369:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1370:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1371:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1372:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1373:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1374:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1375:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1376:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1377:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1378:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1379:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1380:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1381:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1382:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1383:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1384:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1385:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1386:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1387:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1388:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1389:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1390:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1391:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1392:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1393:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1394:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1395:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1396:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1397:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1398:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1399:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1400:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1401:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1402:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1403:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1404:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1405:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1406:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1407:Drivers/CMSIS/Core/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1408:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1409:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1410:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1411:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1412:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1413:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1414:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 34


1415:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1416:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1417:Drivers/CMSIS/Core/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1418:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1419:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1420:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1421:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1422:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
1423:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1424:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1425:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1426:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1427:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1428:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef struct
1429:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1430:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1431:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1432:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1433:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1434:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1435:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1436:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1437:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1438:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1439:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1440:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1441:Drivers/CMSIS/Core/Include/core_cm7.h **** } MPU_Type;
1442:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1443:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1444:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1445:Drivers/CMSIS/Core/Include/core_cm7.h **** /* MPU Type Register Definitions */
1446:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1447:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1448:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1449:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1450:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1451:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1452:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1453:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1454:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1455:Drivers/CMSIS/Core/Include/core_cm7.h **** /* MPU Control Register Definitions */
1456:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1457:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1458:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1459:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1460:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1461:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1462:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1463:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1464:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1465:Drivers/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1466:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1467:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1468:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1469:Drivers/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1470:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1471:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 35


1472:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1473:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1474:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1475:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1476:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1477:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1478:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1479:Drivers/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1480:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1481:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1482:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1483:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1484:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1485:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1486:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1487:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1488:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1489:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1490:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1491:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1492:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1493:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1494:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1495:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1496:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1497:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1498:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1499:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1500:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1501:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1502:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1503:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1504:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1505:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1506:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1507:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1508:Drivers/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1509:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1510:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1511:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1512:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1513:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1514:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1515:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1516:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1517:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1518:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
1519:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1520:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1521:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1522:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1523:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1524:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef struct
1525:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1526:Drivers/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1527:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1528:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 36


1529:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1530:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1531:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1532:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1533:Drivers/CMSIS/Core/Include/core_cm7.h **** } FPU_Type;
1534:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1535:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1536:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1537:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1538:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1539:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1540:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1541:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1542:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1543:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1544:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1545:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1546:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1547:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1548:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1549:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1550:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1551:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1552:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1553:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1554:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1555:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1556:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1557:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1558:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1559:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1560:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1561:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1562:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1563:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1564:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1565:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1566:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1567:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1568:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1569:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1570:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1571:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1572:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1573:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1574:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1575:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1576:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1577:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1578:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1579:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1580:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1581:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1582:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1583:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1584:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1585:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 37


1586:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1587:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1588:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1589:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1590:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1591:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1592:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1593:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1594:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1595:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1596:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1597:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1598:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1599:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1600:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1601:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1602:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1603:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1604:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1605:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1606:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1607:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1608:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1609:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1610:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1611:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1612:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1613:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1614:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1615:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1616:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1617:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1618:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1619:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1620:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1621:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1622:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1623:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1624:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1625:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1626:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1627:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
1628:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1629:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1630:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1631:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1632:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1633:Drivers/CMSIS/Core/Include/core_cm7.h **** typedef struct
1634:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1635:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1636:Drivers/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1637:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1638:Drivers/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1639:Drivers/CMSIS/Core/Include/core_cm7.h **** } CoreDebug_Type;
1640:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1641:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1642:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 38


1643:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1644:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1645:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1646:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1647:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1648:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1649:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1650:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1651:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1652:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1653:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1654:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1655:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1656:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1657:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1658:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1659:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1660:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1661:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1662:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1663:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1664:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1665:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1666:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1667:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1668:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1669:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1670:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1671:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1672:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1673:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1674:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1675:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1676:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1677:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1678:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1679:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1680:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1681:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1682:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1683:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1684:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1685:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1686:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1687:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1688:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1689:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1690:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1691:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1692:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1693:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1694:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1695:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1696:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1697:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1698:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1699:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 39


1700:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1701:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1702:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1703:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1704:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1705:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1706:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1707:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1708:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1709:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1710:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1711:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1712:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1713:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1714:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1715:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1716:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1717:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1718:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1719:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1720:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1721:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1722:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1723:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1724:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1725:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1726:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1727:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1728:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1729:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1730:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1731:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1732:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
1733:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1734:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1735:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1736:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1737:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1738:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1739:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return           Masked and shifted value.
1740:Drivers/CMSIS/Core/Include/core_cm7.h **** */
1741:Drivers/CMSIS/Core/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1742:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1743:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1744:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1745:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1746:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1747:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1748:Drivers/CMSIS/Core/Include/core_cm7.h **** */
1749:Drivers/CMSIS/Core/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1750:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1751:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1752:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1753:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1754:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1755:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1756:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 40


1757:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1758:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
1759:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1760:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1761:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1762:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1763:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1764:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1765:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1766:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1767:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1768:Drivers/CMSIS/Core/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1769:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1770:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1771:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1772:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1773:Drivers/CMSIS/Core/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1774:Drivers/CMSIS/Core/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1775:Drivers/CMSIS/Core/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1776:Drivers/CMSIS/Core/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1777:Drivers/CMSIS/Core/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1778:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1779:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1780:Drivers/CMSIS/Core/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1781:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1782:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1783:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif
1784:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1785:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1786:Drivers/CMSIS/Core/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1787:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1788:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} */
1789:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1790:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1791:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1792:Drivers/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
1793:Drivers/CMSIS/Core/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1794:Drivers/CMSIS/Core/Include/core_cm7.h ****   Core Function Interface contains:
1795:Drivers/CMSIS/Core/Include/core_cm7.h ****   - Core NVIC Functions
1796:Drivers/CMSIS/Core/Include/core_cm7.h ****   - Core SysTick Functions
1797:Drivers/CMSIS/Core/Include/core_cm7.h ****   - Core Debug Functions
1798:Drivers/CMSIS/Core/Include/core_cm7.h ****   - Core Register Access Functions
1799:Drivers/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
1800:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1801:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1802:Drivers/CMSIS/Core/Include/core_cm7.h **** */
1803:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1804:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1805:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1806:Drivers/CMSIS/Core/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1807:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1808:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1809:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1810:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1811:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
1812:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1813:Drivers/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 41


1814:Drivers/CMSIS/Core/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1815:Drivers/CMSIS/Core/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1816:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1817:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
1818:Drivers/CMSIS/Core/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1819:Drivers/CMSIS/Core/Include/core_cm7.h **** #else
1820:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1821:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1822:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1823:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1824:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1825:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1826:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1827:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1828:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1829:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1830:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1831:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1832:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1833:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1834:Drivers/CMSIS/Core/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1835:Drivers/CMSIS/Core/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1836:Drivers/CMSIS/Core/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1837:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
1838:Drivers/CMSIS/Core/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1839:Drivers/CMSIS/Core/Include/core_cm7.h **** #else
1840:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1841:Drivers/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1842:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1843:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1844:Drivers/CMSIS/Core/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1845:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1846:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1847:Drivers/CMSIS/Core/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1848:Drivers/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1849:Drivers/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1850:Drivers/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1851:Drivers/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1852:Drivers/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1853:Drivers/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1854:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1855:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1856:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1857:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Priority Grouping
1858:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1859:Drivers/CMSIS/Core/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1860:Drivers/CMSIS/Core/Include/core_cm7.h ****            Only values from 0..7 are used.
1861:Drivers/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1862:Drivers/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1863:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1864:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1865:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1866:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1867:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t reg_value;
1868:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1869:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1870:Drivers/CMSIS/Core/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 42


1871:Drivers/CMSIS/Core/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1872:Drivers/CMSIS/Core/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1873:Drivers/CMSIS/Core/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1874:Drivers/CMSIS/Core/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1875:Drivers/CMSIS/Core/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1876:Drivers/CMSIS/Core/Include/core_cm7.h **** }
1877:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1878:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1879:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1880:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Priority Grouping
1881:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1882:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1883:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1884:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1885:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1886:Drivers/CMSIS/Core/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1887:Drivers/CMSIS/Core/Include/core_cm7.h **** }
1888:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1889:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1890:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1891:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Enable Interrupt
1892:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1893:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1894:Drivers/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1895:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1896:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1897:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1898:Drivers/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1899:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
1900:Drivers/CMSIS/Core/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1901:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
1902:Drivers/CMSIS/Core/Include/core_cm7.h **** }
1903:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1904:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1905:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1906:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1907:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1908:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1909:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1910:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1911:Drivers/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1912:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1913:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1914:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1915:Drivers/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1916:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
1917:Drivers/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1918:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
1919:Drivers/CMSIS/Core/Include/core_cm7.h ****   else
1920:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
1921:Drivers/CMSIS/Core/Include/core_cm7.h ****     return(0U);
1922:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
1923:Drivers/CMSIS/Core/Include/core_cm7.h **** }
1924:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1925:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1926:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1927:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Disable Interrupt
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 43


1928:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1929:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1930:Drivers/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1931:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1932:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1933:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1934:Drivers/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1935:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
1936:Drivers/CMSIS/Core/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1937:Drivers/CMSIS/Core/Include/core_cm7.h ****     __DSB();
1938:Drivers/CMSIS/Core/Include/core_cm7.h ****     __ISB();
1939:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
1940:Drivers/CMSIS/Core/Include/core_cm7.h **** }
1941:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1942:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1943:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1944:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1945:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1946:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1947:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1948:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1949:Drivers/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1950:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1951:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1952:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1953:Drivers/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1954:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
1955:Drivers/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1956:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
1957:Drivers/CMSIS/Core/Include/core_cm7.h ****   else
1958:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
1959:Drivers/CMSIS/Core/Include/core_cm7.h ****     return(0U);
1960:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
1961:Drivers/CMSIS/Core/Include/core_cm7.h **** }
1962:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1963:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1964:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1965:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1966:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1967:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1968:Drivers/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1969:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
1970:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1971:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1972:Drivers/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1973:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
1974:Drivers/CMSIS/Core/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1975:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
1976:Drivers/CMSIS/Core/Include/core_cm7.h **** }
1977:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1978:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1979:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1980:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1981:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1982:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1983:Drivers/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1984:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 44


1985:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1986:Drivers/CMSIS/Core/Include/core_cm7.h **** {
1987:Drivers/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1988:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
1989:Drivers/CMSIS/Core/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1990:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
1991:Drivers/CMSIS/Core/Include/core_cm7.h **** }
1992:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1993:Drivers/CMSIS/Core/Include/core_cm7.h **** 
1994:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
1995:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Active Interrupt
1996:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1997:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1998:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1999:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2000:Drivers/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
2001:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
2002:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2003:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2004:Drivers/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2005:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
2006:Drivers/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2007:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
2008:Drivers/CMSIS/Core/Include/core_cm7.h ****   else
2009:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
2010:Drivers/CMSIS/Core/Include/core_cm7.h ****     return(0U);
2011:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
2012:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2013:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2014:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2015:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2016:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2017:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2018:Drivers/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2019:Drivers/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2020:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2021:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2022:Drivers/CMSIS/Core/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2023:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
2024:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2025:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2026:Drivers/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2027:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
2028:Drivers/CMSIS/Core/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2029:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
2030:Drivers/CMSIS/Core/Include/core_cm7.h ****   else
2031:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
2032:Drivers/CMSIS/Core/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2033:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
2034:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2035:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2036:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2037:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2038:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2039:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2040:Drivers/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2041:Drivers/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 45


2042:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2043:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return             Interrupt Priority.
2044:Drivers/CMSIS/Core/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2045:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
2046:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2047:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2048:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2049:Drivers/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2050:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
2051:Drivers/CMSIS/Core/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2052:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
2053:Drivers/CMSIS/Core/Include/core_cm7.h ****   else
2054:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
2055:Drivers/CMSIS/Core/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2056:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
2057:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2058:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2059:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2060:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2061:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Encode Priority
2062:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2063:Drivers/CMSIS/Core/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2064:Drivers/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2065:Drivers/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2066:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2067:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2068:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2069:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2070:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
2071:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2072:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2073:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2074:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2075:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2076:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2077:Drivers/CMSIS/Core/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2078:Drivers/CMSIS/Core/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2079:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2080:Drivers/CMSIS/Core/Include/core_cm7.h ****   return (
2081:Drivers/CMSIS/Core/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2082:Drivers/CMSIS/Core/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2083:Drivers/CMSIS/Core/Include/core_cm7.h ****          );
2084:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2085:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2086:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2087:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2088:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Decode Priority
2089:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2090:Drivers/CMSIS/Core/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2091:Drivers/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2092:Drivers/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2093:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2094:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2095:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2096:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2097:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
2098:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 46


2099:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2100:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2101:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2102:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2103:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2104:Drivers/CMSIS/Core/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2105:Drivers/CMSIS/Core/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2106:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2107:Drivers/CMSIS/Core/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2108:Drivers/CMSIS/Core/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2109:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2110:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2111:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2112:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2113:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2114:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2115:Drivers/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2116:Drivers/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2117:Drivers/CMSIS/Core/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2118:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2119:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2120:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
2121:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2122:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2123:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2124:Drivers/CMSIS/Core/Include/core_cm7.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2125:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2126:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2127:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2128:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2129:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2130:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2131:Drivers/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2132:Drivers/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2133:Drivers/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2134:Drivers/CMSIS/Core/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2135:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
2136:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2137:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2138:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2139:Drivers/CMSIS/Core/Include/core_cm7.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2140:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2141:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2142:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2143:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2144:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   System Reset
2145:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2146:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
2147:Drivers/CMSIS/Core/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2148:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2149:Drivers/CMSIS/Core/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2150:Drivers/CMSIS/Core/Include/core_cm7.h ****                                                                        buffered write are completed
2151:Drivers/CMSIS/Core/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2152:Drivers/CMSIS/Core/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2153:Drivers/CMSIS/Core/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2154:Drivers/CMSIS/Core/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2155:Drivers/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 47


2156:Drivers/CMSIS/Core/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2157:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
2158:Drivers/CMSIS/Core/Include/core_cm7.h ****     __NOP();
2159:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
2160:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2161:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2162:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2163:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2164:Drivers/CMSIS/Core/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2165:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2166:Drivers/CMSIS/Core/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2167:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2168:Drivers/CMSIS/Core/Include/core_cm7.h **** #include "mpu_armv7.h"
2169:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2170:Drivers/CMSIS/Core/Include/core_cm7.h **** #endif
2171:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2172:Drivers/CMSIS/Core/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2173:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2174:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2175:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2176:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2177:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
2178:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
2179:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2180:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2181:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   get FPU type
2182:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details returns the FPU type
2183:Drivers/CMSIS/Core/Include/core_cm7.h ****   \returns
2184:Drivers/CMSIS/Core/Include/core_cm7.h ****    - \b  0: No FPU
2185:Drivers/CMSIS/Core/Include/core_cm7.h ****    - \b  1: Single precision FPU
2186:Drivers/CMSIS/Core/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2187:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
2188:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2189:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2190:Drivers/CMSIS/Core/Include/core_cm7.h ****   uint32_t mvfr0;
2191:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2192:Drivers/CMSIS/Core/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2193:Drivers/CMSIS/Core/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2194:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
2195:Drivers/CMSIS/Core/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2196:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
2197:Drivers/CMSIS/Core/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2198:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
2199:Drivers/CMSIS/Core/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2200:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
2201:Drivers/CMSIS/Core/Include/core_cm7.h ****   else
2202:Drivers/CMSIS/Core/Include/core_cm7.h ****   {
2203:Drivers/CMSIS/Core/Include/core_cm7.h ****     return 0U;           /* No FPU */
2204:Drivers/CMSIS/Core/Include/core_cm7.h ****   }
2205:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2206:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2207:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2208:Drivers/CMSIS/Core/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2209:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2210:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2211:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2212:Drivers/CMSIS/Core/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 48


2213:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2214:Drivers/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2215:Drivers/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2216:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2217:Drivers/CMSIS/Core/Include/core_cm7.h ****   @{
2218:Drivers/CMSIS/Core/Include/core_cm7.h ****  */
2219:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2220:Drivers/CMSIS/Core/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2221:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2222:Drivers/CMSIS/Core/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2223:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2224:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2225:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2226:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Enable I-Cache
2227:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Turns on I-Cache
2228:Drivers/CMSIS/Core/Include/core_cm7.h ****   */
2229:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
  68              		.loc 2 2229 22 view .LVU6
  69              	.LBB61:
2230:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2231:Drivers/CMSIS/Core/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2232:Drivers/CMSIS/Core/Include/core_cm7.h ****     __DSB();
  70              		.loc 2 2232 5 view .LVU7
  71              	.LBB62:
  72              	.LBI62:
  73              		.file 3 "Drivers/CMSIS/Core/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 49


  32:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 50


  89:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 51


 146:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 52


 203:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 53


 260:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 54


 317:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 55


 374:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 56


 431:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 57


 488:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 58


 545:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 59


 602:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 60


 659:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 61


 716:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 62


 773:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 63


 830:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  74              		.loc 3 877 27 view .LVU8
  75              	.LBB63:
 878:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  76              		.loc 3 879 3 view .LVU9
  77              		.syntax unified
  78              	@ 879 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
  79 0002 BFF34F8F 		dsb 0xF
  80              	@ 0 "" 2
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 64


  81              		.thumb
  82              		.syntax unified
  83              	.LBE63:
  84              	.LBE62:
2233:Drivers/CMSIS/Core/Include/core_cm7.h ****     __ISB();
  85              		.loc 2 2233 5 view .LVU10
  86              	.LBB64:
  87              	.LBI64:
 866:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
  88              		.loc 3 866 27 view .LVU11
  89              	.LBB65:
 868:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
  90              		.loc 3 868 3 view .LVU12
  91              		.syntax unified
  92              	@ 868 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
  93 0006 BFF36F8F 		isb 0xF
  94              	@ 0 "" 2
  95              		.thumb
  96              		.syntax unified
  97              	.LBE65:
  98              	.LBE64:
2234:Drivers/CMSIS/Core/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  99              		.loc 2 2234 5 view .LVU13
 100              		.loc 2 2234 18 is_stmt 0 view .LVU14
 101 000a 1C4B     		ldr	r3, .L8
 102 000c 0021     		movs	r1, #0
 103 000e C3F85012 		str	r1, [r3, #592]
2235:Drivers/CMSIS/Core/Include/core_cm7.h ****     __DSB();
 104              		.loc 2 2235 5 is_stmt 1 view .LVU15
 105              	.LBB66:
 106              	.LBI66:
 877:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 107              		.loc 3 877 27 view .LVU16
 108              	.LBB67:
 109              		.loc 3 879 3 view .LVU17
 110              		.syntax unified
 111              	@ 879 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 112 0012 BFF34F8F 		dsb 0xF
 113              	@ 0 "" 2
 114              		.thumb
 115              		.syntax unified
 116              	.LBE67:
 117              	.LBE66:
2236:Drivers/CMSIS/Core/Include/core_cm7.h ****     __ISB();
 118              		.loc 2 2236 5 view .LVU18
 119              	.LBB68:
 120              	.LBI68:
 866:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 121              		.loc 3 866 27 view .LVU19
 122              	.LBB69:
 868:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 123              		.loc 3 868 3 view .LVU20
 124              		.syntax unified
 125              	@ 868 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 126 0016 BFF36F8F 		isb 0xF
 127              	@ 0 "" 2
 128              		.thumb
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 65


 129              		.syntax unified
 130              	.LBE69:
 131              	.LBE68:
2237:Drivers/CMSIS/Core/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 132              		.loc 2 2237 5 view .LVU21
 133              		.loc 2 2237 14 is_stmt 0 view .LVU22
 134 001a 5A69     		ldr	r2, [r3, #20]
 135 001c 42F40032 		orr	r2, r2, #131072
 136 0020 5A61     		str	r2, [r3, #20]
2238:Drivers/CMSIS/Core/Include/core_cm7.h ****     __DSB();
 137              		.loc 2 2238 5 is_stmt 1 view .LVU23
 138              	.LBB70:
 139              	.LBI70:
 877:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 140              		.loc 3 877 27 view .LVU24
 141              	.LBB71:
 142              		.loc 3 879 3 view .LVU25
 143              		.syntax unified
 144              	@ 879 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 145 0022 BFF34F8F 		dsb 0xF
 146              	@ 0 "" 2
 147              		.thumb
 148              		.syntax unified
 149              	.LBE71:
 150              	.LBE70:
2239:Drivers/CMSIS/Core/Include/core_cm7.h ****     __ISB();
 151              		.loc 2 2239 5 view .LVU26
 152              	.LBB72:
 153              	.LBI72:
 866:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 154              		.loc 3 866 27 view .LVU27
 155              	.LBB73:
 868:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 156              		.loc 3 868 3 view .LVU28
 157              		.syntax unified
 158              	@ 868 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 159 0026 BFF36F8F 		isb 0xF
 160              	@ 0 "" 2
 161              		.thumb
 162              		.syntax unified
 163              	.LBE73:
 164              	.LBE72:
 165              	.LBE61:
 166              	.LBE60:
 402:Src/main.c    **** 
 403:Src/main.c    ****   /* Enable D-Cache */
 404:Src/main.c    ****   SCB_EnableDCache();
 167              		.loc 1 404 3 view .LVU29
 168              	.LBB74:
 169              	.LBI74:
2240:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
2241:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2242:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2243:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2244:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2245:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Disable I-Cache
2246:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Turns off I-Cache
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 66


2247:Drivers/CMSIS/Core/Include/core_cm7.h ****   */
2248:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2249:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2250:Drivers/CMSIS/Core/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2251:Drivers/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2252:Drivers/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2253:Drivers/CMSIS/Core/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2254:Drivers/CMSIS/Core/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2255:Drivers/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2256:Drivers/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2257:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
2258:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2259:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2260:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2261:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2262:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2263:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Invalidates I-Cache
2264:Drivers/CMSIS/Core/Include/core_cm7.h ****   */
2265:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2266:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2267:Drivers/CMSIS/Core/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2268:Drivers/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2269:Drivers/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2270:Drivers/CMSIS/Core/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2271:Drivers/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2272:Drivers/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2273:Drivers/CMSIS/Core/Include/core_cm7.h ****   #endif
2274:Drivers/CMSIS/Core/Include/core_cm7.h **** }
2275:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2276:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2277:Drivers/CMSIS/Core/Include/core_cm7.h **** /**
2278:Drivers/CMSIS/Core/Include/core_cm7.h ****   \brief   Enable D-Cache
2279:Drivers/CMSIS/Core/Include/core_cm7.h ****   \details Turns on D-Cache
2280:Drivers/CMSIS/Core/Include/core_cm7.h ****   */
2281:Drivers/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
 170              		.loc 2 2281 22 view .LVU30
 171              	.LBB75:
2282:Drivers/CMSIS/Core/Include/core_cm7.h **** {
2283:Drivers/CMSIS/Core/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2284:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t ccsidr;
 172              		.loc 2 2284 5 view .LVU31
2285:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t sets;
 173              		.loc 2 2285 5 view .LVU32
2286:Drivers/CMSIS/Core/Include/core_cm7.h ****     uint32_t ways;
 174              		.loc 2 2286 5 view .LVU33
2287:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2288:Drivers/CMSIS/Core/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 175              		.loc 2 2288 5 view .LVU34
 176              		.loc 2 2288 17 is_stmt 0 view .LVU35
 177 002a C3F88410 		str	r1, [r3, #132]
2289:Drivers/CMSIS/Core/Include/core_cm7.h ****     __DSB();
 178              		.loc 2 2289 5 is_stmt 1 view .LVU36
 179              	.LBB76:
 180              	.LBI76:
 877:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 181              		.loc 3 877 27 view .LVU37
 182              	.LBB77:
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 67


 183              		.loc 3 879 3 view .LVU38
 184              		.syntax unified
 185              	@ 879 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 186 002e BFF34F8F 		dsb 0xF
 187              	@ 0 "" 2
 188              		.thumb
 189              		.syntax unified
 190              	.LBE77:
 191              	.LBE76:
2290:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2291:Drivers/CMSIS/Core/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
 192              		.loc 2 2291 5 view .LVU39
 193              		.loc 2 2291 12 is_stmt 0 view .LVU40
 194 0032 D3F88000 		ldr	r0, [r3, #128]
 195              	.LVL0:
2292:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2293:Drivers/CMSIS/Core/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2294:Drivers/CMSIS/Core/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 196              		.loc 2 2294 5 is_stmt 1 view .LVU41
 197              		.loc 2 2294 10 is_stmt 0 view .LVU42
 198 0036 C0F34E32 		ubfx	r2, r0, #13, #15
 199              	.LVL1:
 200              		.loc 2 2294 10 view .LVU43
 201 003a 00E0     		b	.L5
 202              	.LVL2:
 203              	.L6:
2295:Drivers/CMSIS/Core/Include/core_cm7.h ****     do {
2296:Drivers/CMSIS/Core/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2297:Drivers/CMSIS/Core/Include/core_cm7.h ****       do {
2298:Drivers/CMSIS/Core/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2299:Drivers/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2300:Drivers/CMSIS/Core/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2301:Drivers/CMSIS/Core/Include/core_cm7.h ****           __schedule_barrier();
2302:Drivers/CMSIS/Core/Include/core_cm7.h ****         #endif
2303:Drivers/CMSIS/Core/Include/core_cm7.h ****       } while (ways-- != 0U);
2304:Drivers/CMSIS/Core/Include/core_cm7.h ****     } while(sets-- != 0U);
 204              		.loc 2 2304 17 view .LVU44
 205 003c 1A46     		mov	r2, r3
 206              	.LVL3:
 207              	.L5:
2295:Drivers/CMSIS/Core/Include/core_cm7.h ****     do {
 208              		.loc 2 2295 5 is_stmt 1 view .LVU45
2296:Drivers/CMSIS/Core/Include/core_cm7.h ****       do {
 209              		.loc 2 2296 7 view .LVU46
2296:Drivers/CMSIS/Core/Include/core_cm7.h ****       do {
 210              		.loc 2 2296 12 is_stmt 0 view .LVU47
 211 003e C0F3C901 		ubfx	r1, r0, #3, #10
 212              	.LVL4:
 213              	.L4:
2297:Drivers/CMSIS/Core/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 214              		.loc 2 2297 7 is_stmt 1 view .LVU48
2298:Drivers/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 215              		.loc 2 2298 9 view .LVU49
2298:Drivers/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 216              		.loc 2 2298 52 is_stmt 0 view .LVU50
 217 0042 43F6E073 		movw	r3, #16352
 218 0046 03EA4213 		and	r3, r3, r2, lsl #5
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 68


2298:Drivers/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 219              		.loc 2 2298 73 view .LVU51
 220 004a 43EA8173 		orr	r3, r3, r1, lsl #30
2298:Drivers/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 221              		.loc 2 2298 20 view .LVU52
 222 004e 0B4C     		ldr	r4, .L8
 223 0050 C4F86032 		str	r3, [r4, #608]
2303:Drivers/CMSIS/Core/Include/core_cm7.h ****     } while(sets-- != 0U);
 224              		.loc 2 2303 15 is_stmt 1 view .LVU53
 225 0054 0B46     		mov	r3, r1
2303:Drivers/CMSIS/Core/Include/core_cm7.h ****     } while(sets-- != 0U);
 226              		.loc 2 2303 20 is_stmt 0 view .LVU54
 227 0056 0139     		subs	r1, r1, #1
 228              	.LVL5:
2303:Drivers/CMSIS/Core/Include/core_cm7.h ****     } while(sets-- != 0U);
 229              		.loc 2 2303 7 view .LVU55
 230 0058 002B     		cmp	r3, #0
 231 005a F2D1     		bne	.L4
 232              		.loc 2 2304 12 is_stmt 1 view .LVU56
 233              		.loc 2 2304 17 is_stmt 0 view .LVU57
 234 005c 531E     		subs	r3, r2, #1
 235              	.LVL6:
 236              		.loc 2 2304 5 view .LVU58
 237 005e 002A     		cmp	r2, #0
 238 0060 ECD1     		bne	.L6
2305:Drivers/CMSIS/Core/Include/core_cm7.h ****     __DSB();
 239              		.loc 2 2305 5 is_stmt 1 view .LVU59
 240              	.LBB78:
 241              	.LBI78:
 877:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 242              		.loc 3 877 27 view .LVU60
 243              	.LBB79:
 244              		.loc 3 879 3 view .LVU61
 245              		.syntax unified
 246              	@ 879 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 247 0062 BFF34F8F 		dsb 0xF
 248              	@ 0 "" 2
 249              		.thumb
 250              		.syntax unified
 251              	.LBE79:
 252              	.LBE78:
2306:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2307:Drivers/CMSIS/Core/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 253              		.loc 2 2307 5 view .LVU62
 254              		.loc 2 2307 14 is_stmt 0 view .LVU63
 255 0066 6369     		ldr	r3, [r4, #20]
 256              	.LVL7:
 257              		.loc 2 2307 14 view .LVU64
 258 0068 43F48033 		orr	r3, r3, #65536
 259 006c 6361     		str	r3, [r4, #20]
2308:Drivers/CMSIS/Core/Include/core_cm7.h **** 
2309:Drivers/CMSIS/Core/Include/core_cm7.h ****     __DSB();
 260              		.loc 2 2309 5 is_stmt 1 view .LVU65
 261              	.LBB80:
 262              	.LBI80:
 877:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 263              		.loc 3 877 27 view .LVU66
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 69


 264              	.LBB81:
 265              		.loc 3 879 3 view .LVU67
 266              		.syntax unified
 267              	@ 879 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 268 006e BFF34F8F 		dsb 0xF
 269              	@ 0 "" 2
 270              		.thumb
 271              		.syntax unified
 272              	.LBE81:
 273              	.LBE80:
2310:Drivers/CMSIS/Core/Include/core_cm7.h ****     __ISB();
 274              		.loc 2 2310 5 view .LVU68
 275              	.LBB82:
 276              	.LBI82:
 866:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 277              		.loc 3 866 27 view .LVU69
 278              	.LBB83:
 868:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 279              		.loc 3 868 3 view .LVU70
 280              		.syntax unified
 281              	@ 868 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 282 0072 BFF36F8F 		isb 0xF
 283              	@ 0 "" 2
 284              	.LVL8:
 868:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 285              		.loc 3 868 3 is_stmt 0 view .LVU71
 286              		.thumb
 287              		.syntax unified
 288              	.LBE83:
 289              	.LBE82:
 290              	.LBE75:
 291              	.LBE74:
 405:Src/main.c    **** }
 292              		.loc 1 405 1 view .LVU72
 293 0076 5DF8044B 		ldr	r4, [sp], #4
 294              	.LCFI1:
 295              		.cfi_restore 4
 296              		.cfi_def_cfa_offset 0
 297 007a 7047     		bx	lr
 298              	.L9:
 299              		.align	2
 300              	.L8:
 301 007c 00ED00E0 		.word	-536810240
 302              		.cfi_endproc
 303              	.LFE179:
 305              		.section	.rodata.tcpecho_thread.str1.4,"aMS",%progbits,1
 306              		.align	2
 307              	.LC2:
 308 0000 257300   		.ascii	"%s\000"
 309              		.section	.text.tcpecho_thread,"ax",%progbits
 310              		.align	1
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu fpv5-sp-d16
 316              	tcpecho_thread:
 317              	.LVL9:
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 70


 318              	.LFB173:
 158:Src/main.c    ****   /* Create a new connection identifier. */
 319              		.loc 1 158 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 272
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 158:Src/main.c    ****   /* Create a new connection identifier. */
 323              		.loc 1 158 1 is_stmt 0 view .LVU74
 324 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 325              	.LCFI2:
 326              		.cfi_def_cfa_offset 20
 327              		.cfi_offset 4, -20
 328              		.cfi_offset 5, -16
 329              		.cfi_offset 6, -12
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 C7B0     		sub	sp, sp, #284
 333              	.LCFI3:
 334              		.cfi_def_cfa_offset 304
 161:Src/main.c    ****   char logbuf[256];
 335              		.loc 1 161 3 is_stmt 1 view .LVU75
 162:Src/main.c    ****   void *data;
 336              		.loc 1 162 3 view .LVU76
 163:Src/main.c    ****   u16_t len;
 337              		.loc 1 163 3 view .LVU77
 164:Src/main.c    ****   struct netconn *newconn;
 338              		.loc 1 164 3 view .LVU78
 165:Src/main.c    ****   struct netbuf *buf;
 339              		.loc 1 165 3 view .LVU79
 166:Src/main.c    ****   struct netconn *conn = netconn_new(NETCONN_TCP);
 340              		.loc 1 166 3 view .LVU80
 167:Src/main.c    **** 
 341              		.loc 1 167 3 view .LVU81
 167:Src/main.c    **** 
 342              		.loc 1 167 26 is_stmt 0 view .LVU82
 343 0004 0022     		movs	r2, #0
 344 0006 1146     		mov	r1, r2
 345 0008 1020     		movs	r0, #16
 346              	.LVL10:
 167:Src/main.c    **** 
 347              		.loc 1 167 26 view .LVU83
 348 000a FFF7FEFF 		bl	netconn_new_with_proto_and_callback
 349              	.LVL11:
 169:Src/main.c    ****   {
 350              		.loc 1 169 3 is_stmt 1 view .LVU84
 169:Src/main.c    ****   {
 351              		.loc 1 169 6 is_stmt 0 view .LVU85
 352 000e 0028     		cmp	r0, #0
 353 0010 48D0     		beq	.L10
 354 0012 0746     		mov	r7, r0
 172:Src/main.c    ****     if (err == ERR_OK)
 355              		.loc 1 172 5 is_stmt 1 view .LVU86
 172:Src/main.c    ****     if (err == ERR_OK)
 356              		.loc 1 172 11 is_stmt 0 view .LVU87
 357 0014 0722     		movs	r2, #7
 358 0016 0021     		movs	r1, #0
 359 0018 FFF7FEFF 		bl	netconn_bind
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 71


 360              	.LVL12:
 173:Src/main.c    ****     {      
 361              		.loc 1 173 5 is_stmt 1 view .LVU88
 173:Src/main.c    ****     {      
 362              		.loc 1 173 8 is_stmt 0 view .LVU89
 363 001c 0028     		cmp	r0, #0
 364 001e 3ED1     		bne	.L12
 176:Src/main.c    ****       while (1)
 365              		.loc 1 176 7 is_stmt 1 view .LVU90
 366 0020 FF21     		movs	r1, #255
 367 0022 3846     		mov	r0, r7
 368              	.LVL13:
 176:Src/main.c    ****       while (1)
 369              		.loc 1 176 7 is_stmt 0 view .LVU91
 370 0024 FFF7FEFF 		bl	netconn_listen_with_backlog
 371              	.LVL14:
 372 0028 32E0     		b	.L14
 373              	.LVL15:
 374              	.L15:
 186:Src/main.c    ****             {
 375              		.loc 1 186 13 is_stmt 1 discriminator 1 view .LVU92
 188:Src/main.c    ****               netconn_write(newconn, data, len, NETCONN_COPY); 
 376              		.loc 1 188 15 discriminator 1 view .LVU93
 377 002a 0DF11202 		add	r2, sp, #18
 378 002e 05A9     		add	r1, sp, #20
 379 0030 0298     		ldr	r0, [sp, #8]
 380 0032 FFF7FEFF 		bl	netbuf_data
 381              	.LVL16:
 189:Src/main.c    ****               memcpy(&logbuf, data,len);
 382              		.loc 1 189 15 discriminator 1 view .LVU94
 383 0036 0026     		movs	r6, #0
 384 0038 0096     		str	r6, [sp]
 385 003a 0123     		movs	r3, #1
 386 003c BDF81220 		ldrh	r2, [sp, #18]
 387 0040 0599     		ldr	r1, [sp, #20]
 388 0042 0398     		ldr	r0, [sp, #12]
 389 0044 FFF7FEFF 		bl	netconn_write_partly
 390              	.LVL17:
 190:Src/main.c    ****               logbuf[len] = 0;
 391              		.loc 1 190 15 discriminator 1 view .LVU95
 392 0048 BDF81250 		ldrh	r5, [sp, #18]
 393 004c 06AC     		add	r4, sp, #24
 394 004e 2A46     		mov	r2, r5
 395 0050 0599     		ldr	r1, [sp, #20]
 396 0052 2046     		mov	r0, r4
 397 0054 FFF7FEFF 		bl	memcpy
 398              	.LVL18:
 191:Src/main.c    ****               LCD_UsrLog("%s",logbuf);
 399              		.loc 1 191 15 discriminator 1 view .LVU96
 191:Src/main.c    ****               LCD_UsrLog("%s",logbuf);
 400              		.loc 1 191 27 is_stmt 0 discriminator 1 view .LVU97
 401 0058 6655     		strb	r6, [r4, r5]
 192:Src/main.c    ****             } while (netbuf_next(buf) >= 0);
 402              		.loc 1 192 15 is_stmt 1 discriminator 1 view .LVU98
 192:Src/main.c    ****             } while (netbuf_next(buf) >= 0);
 403              		.loc 1 192 15 discriminator 1 view .LVU99
 404 005a 134B     		ldr	r3, .L18
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 72


 405 005c 134A     		ldr	r2, .L18+4
 406 005e 1A60     		str	r2, [r3]
 192:Src/main.c    ****             } while (netbuf_next(buf) >= 0);
 407              		.loc 1 192 15 discriminator 1 view .LVU100
 408 0060 2146     		mov	r1, r4
 409 0062 1348     		ldr	r0, .L18+8
 410 0064 FFF7FEFF 		bl	printf
 411              	.LVL19:
 192:Src/main.c    ****             } while (netbuf_next(buf) >= 0);
 412              		.loc 1 192 15 discriminator 1 view .LVU101
 193:Src/main.c    ****             netbuf_delete(buf);
 413              		.loc 1 193 21 discriminator 1 view .LVU102
 193:Src/main.c    ****             netbuf_delete(buf);
 414              		.loc 1 193 22 is_stmt 0 discriminator 1 view .LVU103
 415 0068 0298     		ldr	r0, [sp, #8]
 416 006a FFF7FEFF 		bl	netbuf_next
 417              	.LVL20:
 193:Src/main.c    ****             netbuf_delete(buf);
 418              		.loc 1 193 13 discriminator 1 view .LVU104
 419 006e B042     		cmp	r0, r6
 420 0070 DBDA     		bge	.L15
 194:Src/main.c    ****           }
 421              		.loc 1 194 13 is_stmt 1 view .LVU105
 422 0072 0298     		ldr	r0, [sp, #8]
 423 0074 FFF7FEFF 		bl	netbuf_delete
 424              	.LVL21:
 425              	.L13:
 184:Src/main.c    ****           {
 426              		.loc 1 184 17 view .LVU106
 184:Src/main.c    ****           {
 427              		.loc 1 184 31 is_stmt 0 view .LVU107
 428 0078 02A9     		add	r1, sp, #8
 429 007a 0398     		ldr	r0, [sp, #12]
 430 007c FFF7FEFF 		bl	netconn_recv
 431              	.LVL22:
 184:Src/main.c    ****           {
 432              		.loc 1 184 17 view .LVU108
 433 0080 0028     		cmp	r0, #0
 434 0082 D2D0     		beq	.L15
 197:Src/main.c    ****           netconn_delete(newconn);
 435              		.loc 1 197 11 is_stmt 1 view .LVU109
 436 0084 0398     		ldr	r0, [sp, #12]
 437              	.LVL23:
 197:Src/main.c    ****           netconn_delete(newconn);
 438              		.loc 1 197 11 is_stmt 0 view .LVU110
 439 0086 FFF7FEFF 		bl	netconn_close
 440              	.LVL24:
 198:Src/main.c    ****         }
 441              		.loc 1 198 11 is_stmt 1 view .LVU111
 442 008a 0398     		ldr	r0, [sp, #12]
 443 008c FFF7FEFF 		bl	netconn_delete
 444              	.LVL25:
 445              	.L14:
 177:Src/main.c    ****       {
 446              		.loc 1 177 7 view .LVU112
 180:Src/main.c    ****         /* Process the new connection. */
 447              		.loc 1 180 9 view .LVU113
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 73


 180:Src/main.c    ****         /* Process the new connection. */
 448              		.loc 1 180 22 is_stmt 0 view .LVU114
 449 0090 03A9     		add	r1, sp, #12
 450 0092 3846     		mov	r0, r7
 451 0094 FFF7FEFF 		bl	netconn_accept
 452              	.LVL26:
 182:Src/main.c    ****         {
 453              		.loc 1 182 9 is_stmt 1 view .LVU115
 182:Src/main.c    ****         {
 454              		.loc 1 182 12 is_stmt 0 view .LVU116
 455 0098 0028     		cmp	r0, #0
 456 009a F9D1     		bne	.L14
 457 009c ECE7     		b	.L13
 458              	.LVL27:
 459              	.L12:
 204:Src/main.c    ****     }     
 460              		.loc 1 204 7 is_stmt 1 view .LVU117
 461 009e 0398     		ldr	r0, [sp, #12]
 462              	.LVL28:
 204:Src/main.c    ****     }     
 463              		.loc 1 204 7 is_stmt 0 view .LVU118
 464 00a0 FFF7FEFF 		bl	netconn_delete
 465              	.LVL29:
 466              	.L10:
 207:Src/main.c    **** 
 467              		.loc 1 207 1 view .LVU119
 468 00a4 47B0     		add	sp, sp, #284
 469              	.LCFI4:
 470              		.cfi_def_cfa_offset 20
 471              		@ sp needed
 472 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 473              	.L19:
 474              		.align	2
 475              	.L18:
 476 00a8 00000000 		.word	LCD_LineColor
 477 00ac 800000FF 		.word	-16777088
 478 00b0 00000000 		.word	.LC2
 479              		.cfi_endproc
 480              	.LFE173:
 482              		.section	.rodata.BSP_Config.str1.4,"aMS",%progbits,1
 483              		.align	2
 484              	.LC3:
 485 0000 57656273 		.ascii	"Webserver Application Netconn API\000"
 485      65727665 
 485      72204170 
 485      706C6963 
 485      6174696F 
 486 0022 0000     		.align	2
 487              	.LC4:
 488 0024 53544D33 		.ascii	"STM32746G-DISCO board\000"
 488      32373436 
 488      472D4449 
 488      53434F20 
 488      626F6172 
 489 003a 0000     		.align	2
 490              	.LC5:
 491 003c 20205374 		.ascii	"  State: Ethernet Initialization ...\000"
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 74


 491      6174653A 
 491      20457468 
 491      65726E65 
 491      7420496E 
 492              		.section	.text.BSP_Config,"ax",%progbits
 493              		.align	1
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 497              		.fpu fpv5-sp-d16
 499              	BSP_Config:
 500              	.LFB175:
 253:Src/main.c    ****   /* Initialize the LCD */
 501              		.loc 1 253 1 is_stmt 1 view -0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505 0000 08B5     		push	{r3, lr}
 506              	.LCFI5:
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 3, -8
 509              		.cfi_offset 14, -4
 255:Src/main.c    ****   
 510              		.loc 1 255 3 view .LVU121
 511 0002 FFF7FEFF 		bl	BSP_LCD_Init
 512              	.LVL30:
 258:Src/main.c    ****   
 513              		.loc 1 258 3 view .LVU122
 514 0006 4FF04041 		mov	r1, #-1073741824
 515 000a 0120     		movs	r0, #1
 516 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 517              	.LVL31:
 261:Src/main.c    ****   
 518              		.loc 1 261 3 view .LVU123
 519 0010 0120     		movs	r0, #1
 520 0012 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 521              	.LVL32:
 263:Src/main.c    ****   
 522              		.loc 1 263 3 view .LVU124
 523 0016 0948     		ldr	r0, .L22
 524 0018 FFF7FEFF 		bl	BSP_LCD_SetFont
 525              	.LVL33:
 266:Src/main.c    ****   
 526              		.loc 1 266 3 view .LVU125
 527 001c FFF7FEFF 		bl	LCD_LOG_Init
 528              	.LVL34:
 269:Src/main.c    ****   LCD_LOG_SetFooter((uint8_t *)"STM32746G-DISCO board");
 529              		.loc 1 269 3 view .LVU126
 530 0020 0748     		ldr	r0, .L22+4
 531 0022 FFF7FEFF 		bl	LCD_LOG_SetHeader
 532              	.LVL35:
 270:Src/main.c    ****   
 533              		.loc 1 270 3 view .LVU127
 534 0026 0748     		ldr	r0, .L22+8
 535 0028 FFF7FEFF 		bl	LCD_LOG_SetFooter
 536              	.LVL36:
 272:Src/main.c    **** }
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 75


 537              		.loc 1 272 3 view .LVU128
 272:Src/main.c    **** }
 538              		.loc 1 272 3 view .LVU129
 539 002c 064B     		ldr	r3, .L22+12
 540 002e 074A     		ldr	r2, .L22+16
 541 0030 1A60     		str	r2, [r3]
 272:Src/main.c    **** }
 542              		.loc 1 272 3 view .LVU130
 543 0032 0748     		ldr	r0, .L22+20
 544 0034 FFF7FEFF 		bl	puts
 545              	.LVL37:
 272:Src/main.c    **** }
 546              		.loc 1 272 3 view .LVU131
 273:Src/main.c    **** 
 547              		.loc 1 273 1 is_stmt 0 view .LVU132
 548 0038 08BD     		pop	{r3, pc}
 549              	.L23:
 550 003a 00BF     		.align	2
 551              	.L22:
 552 003c 00000000 		.word	Font24
 553 0040 00000000 		.word	.LC3
 554 0044 24000000 		.word	.LC4
 555 0048 00000000 		.word	LCD_LineColor
 556 004c 800000FF 		.word	-16777088
 557 0050 3C000000 		.word	.LC5
 558              		.cfi_endproc
 559              	.LFE175:
 561              		.section	.text.Netif_Config,"ax",%progbits
 562              		.align	1
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu fpv5-sp-d16
 568              	Netif_Config:
 569              	.LFB174:
 215:Src/main.c    ****   ip_addr_t ipaddr;
 570              		.loc 1 215 1 is_stmt 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 16
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574 0000 10B5     		push	{r4, lr}
 575              	.LCFI6:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 4, -8
 578              		.cfi_offset 14, -4
 579 0002 88B0     		sub	sp, sp, #32
 580              	.LCFI7:
 581              		.cfi_def_cfa_offset 40
 216:Src/main.c    ****   ip_addr_t netmask;
 582              		.loc 1 216 3 view .LVU134
 217:Src/main.c    ****   ip_addr_t gw;
 583              		.loc 1 217 3 view .LVU135
 218:Src/main.c    ****  
 584              		.loc 1 218 3 view .LVU136
 225:Src/main.c    ****   IP_ADDR4(&netmask,NETMASK_ADDR0,NETMASK_ADDR1,NETMASK_ADDR2,NETMASK_ADDR3);
 585              		.loc 1 225 3 view .LVU137
 586 0004 134B     		ldr	r3, .L28
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 76


 587 0006 0793     		str	r3, [sp, #28]
 226:Src/main.c    ****   IP_ADDR4(&gw,GW_ADDR0,GW_ADDR1,GW_ADDR2,GW_ADDR3);
 588              		.loc 1 226 3 view .LVU138
 589 0008 6FF07F43 		mvn	r3, #-16777216
 590 000c 0693     		str	r3, [sp, #24]
 227:Src/main.c    **** #endif /* USE_DHCP */
 591              		.loc 1 227 3 view .LVU139
 592 000e 03F52843 		add	r3, r3, #43008
 593 0012 C133     		adds	r3, r3, #193
 594 0014 0593     		str	r3, [sp, #20]
 230:Src/main.c    ****   
 595              		.loc 1 230 3 view .LVU140
 596 0016 104C     		ldr	r4, .L28+4
 597 0018 104B     		ldr	r3, .L28+8
 598 001a 0293     		str	r3, [sp, #8]
 599 001c 104B     		ldr	r3, .L28+12
 600 001e 0193     		str	r3, [sp, #4]
 601 0020 0023     		movs	r3, #0
 602 0022 0093     		str	r3, [sp]
 603 0024 05AB     		add	r3, sp, #20
 604 0026 06AA     		add	r2, sp, #24
 605 0028 07A9     		add	r1, sp, #28
 606 002a 2046     		mov	r0, r4
 607 002c FFF7FEFF 		bl	netif_add
 608              	.LVL38:
 233:Src/main.c    ****   
 609              		.loc 1 233 3 view .LVU141
 610 0030 2046     		mov	r0, r4
 611 0032 FFF7FEFF 		bl	netif_set_default
 612              	.LVL39:
 235:Src/main.c    ****   {
 613              		.loc 1 235 3 view .LVU142
 235:Src/main.c    ****   {
 614              		.loc 1 235 7 is_stmt 0 view .LVU143
 615 0036 94F83130 		ldrb	r3, [r4, #49]	@ zero_extendqisi2
 235:Src/main.c    ****   {
 616              		.loc 1 235 6 view .LVU144
 617 003a 13F0040F 		tst	r3, #4
 618 003e 04D0     		beq	.L25
 238:Src/main.c    ****   }
 619              		.loc 1 238 5 is_stmt 1 view .LVU145
 620 0040 2046     		mov	r0, r4
 621 0042 FFF7FEFF 		bl	netif_set_up
 622              	.LVL40:
 623              	.L24:
 245:Src/main.c    **** 
 624              		.loc 1 245 1 is_stmt 0 view .LVU146
 625 0046 08B0     		add	sp, sp, #32
 626              	.LCFI8:
 627              		.cfi_remember_state
 628              		.cfi_def_cfa_offset 8
 629              		@ sp needed
 630 0048 10BD     		pop	{r4, pc}
 631              	.L25:
 632              	.LCFI9:
 633              		.cfi_restore_state
 243:Src/main.c    ****   }
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 77


 634              		.loc 1 243 5 is_stmt 1 view .LVU147
 635 004a 0348     		ldr	r0, .L28+4
 636 004c FFF7FEFF 		bl	netif_set_down
 637              	.LVL41:
 245:Src/main.c    **** 
 638              		.loc 1 245 1 is_stmt 0 view .LVU148
 639 0050 F9E7     		b	.L24
 640              	.L29:
 641 0052 00BF     		.align	2
 642              	.L28:
 643 0054 C0A8000A 		.word	167815360
 644 0058 00000000 		.word	gnetif
 645 005c 00000000 		.word	tcpip_input
 646 0060 00000000 		.word	ethernetif_init
 647              		.cfi_endproc
 648              	.LFE174:
 650              		.section	.rodata.StartThread.str1.4,"aMS",%progbits,1
 651              		.align	2
 652              	.LC6:
 653 0000 74637065 		.ascii	"tcpecho_thread\000"
 653      63686F5F 
 653      74687265 
 653      616400
 654              		.section	.text.StartThread,"ax",%progbits
 655              		.align	1
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu fpv5-sp-d16
 661              	StartThread:
 662              	.LVL42:
 663              	.LFB172:
 126:Src/main.c    ****   /* Initialize LCD */
 664              		.loc 1 126 1 is_stmt 1 view -0
 665              		.cfi_startproc
 666              		@ Volatile: function does not return.
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 126:Src/main.c    ****   /* Initialize LCD */
 669              		.loc 1 126 1 is_stmt 0 view .LVU150
 670 0000 00B5     		push	{lr}
 671              	.LCFI10:
 672              		.cfi_def_cfa_offset 4
 673              		.cfi_offset 14, -4
 674 0002 83B0     		sub	sp, sp, #12
 675              	.LCFI11:
 676              		.cfi_def_cfa_offset 16
 128:Src/main.c    ****   
 677              		.loc 1 128 3 is_stmt 1 view .LVU151
 678 0004 FFF7FEFF 		bl	BSP_Config
 679              	.LVL43:
 131:Src/main.c    ****   
 680              		.loc 1 131 3 view .LVU152
 681 0008 0021     		movs	r1, #0
 682 000a 0846     		mov	r0, r1
 683 000c FFF7FEFF 		bl	tcpip_init
 684              	.LVL44:
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 78


 134:Src/main.c    ****   
 685              		.loc 1 134 3 view .LVU153
 686 0010 FFF7FEFF 		bl	Netif_Config
 687              	.LVL45:
 137:Src/main.c    **** 
 688              		.loc 1 137 3 view .LVU154
 689 0014 FFF7FEFF 		bl	http_server_netconn_init
 690              	.LVL46:
 140:Src/main.c    ****   /* Notify user about the network interface config */
 691              		.loc 1 140 3 view .LVU155
 692 0018 0123     		movs	r3, #1
 693 001a 0093     		str	r3, [sp]
 694 001c 4FF4FA73 		mov	r3, #500
 695 0020 0022     		movs	r2, #0
 696 0022 0549     		ldr	r1, .L33
 697 0024 0548     		ldr	r0, .L33+4
 698 0026 FFF7FEFF 		bl	sys_thread_new
 699              	.LVL47:
 142:Src/main.c    ****   
 700              		.loc 1 142 3 view .LVU156
 701 002a 0548     		ldr	r0, .L33+8
 702 002c FFF7FEFF 		bl	User_notification
 703              	.LVL48:
 704              	.L31:
 150:Src/main.c    ****   {
 705              		.loc 1 150 3 discriminator 1 view .LVU157
 153:Src/main.c    ****   }
 706              		.loc 1 153 5 discriminator 1 view .LVU158
 707 0030 0020     		movs	r0, #0
 708 0032 FFF7FEFF 		bl	osThreadTerminate
 709              	.LVL49:
 150:Src/main.c    ****   {
 710              		.loc 1 150 9 discriminator 1 view .LVU159
 711 0036 FBE7     		b	.L31
 712              	.L34:
 713              		.align	2
 714              	.L33:
 715 0038 00000000 		.word	tcpecho_thread
 716 003c 00000000 		.word	.LC6
 717 0040 00000000 		.word	gnetif
 718              		.cfi_endproc
 719              	.LFE172:
 721              		.section	.text.MPU_Config,"ax",%progbits
 722              		.align	1
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 726              		.fpu fpv5-sp-d16
 728              	MPU_Config:
 729              	.LFB178:
 353:Src/main.c    ****   MPU_Region_InitTypeDef MPU_InitStruct;
 730              		.loc 1 353 1 view -0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 16
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 735              	.LCFI12:
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 79


 736              		.cfi_def_cfa_offset 20
 737              		.cfi_offset 4, -20
 738              		.cfi_offset 5, -16
 739              		.cfi_offset 6, -12
 740              		.cfi_offset 7, -8
 741              		.cfi_offset 14, -4
 742 0002 85B0     		sub	sp, sp, #20
 743              	.LCFI13:
 744              		.cfi_def_cfa_offset 40
 354:Src/main.c    ****   
 745              		.loc 1 354 3 view .LVU161
 357:Src/main.c    ****   
 746              		.loc 1 357 3 view .LVU162
 747 0004 FFF7FEFF 		bl	HAL_MPU_Disable
 748              	.LVL50:
 360:Src/main.c    ****   MPU_InitStruct.BaseAddress = 0x2004C000;
 749              		.loc 1 360 3 view .LVU163
 360:Src/main.c    ****   MPU_InitStruct.BaseAddress = 0x2004C000;
 750              		.loc 1 360 25 is_stmt 0 view .LVU164
 751 0008 0125     		movs	r5, #1
 752 000a 8DF80050 		strb	r5, [sp]
 361:Src/main.c    ****   MPU_InitStruct.Size = MPU_REGION_SIZE_16KB;
 753              		.loc 1 361 3 is_stmt 1 view .LVU165
 361:Src/main.c    ****   MPU_InitStruct.Size = MPU_REGION_SIZE_16KB;
 754              		.loc 1 361 30 is_stmt 0 view .LVU166
 755 000e 1C4F     		ldr	r7, .L37
 756 0010 0197     		str	r7, [sp, #4]
 362:Src/main.c    ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 757              		.loc 1 362 3 is_stmt 1 view .LVU167
 362:Src/main.c    ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 758              		.loc 1 362 23 is_stmt 0 view .LVU168
 759 0012 0D23     		movs	r3, #13
 760 0014 8DF80830 		strb	r3, [sp, #8]
 363:Src/main.c    ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 761              		.loc 1 363 3 is_stmt 1 view .LVU169
 363:Src/main.c    ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 762              		.loc 1 363 35 is_stmt 0 view .LVU170
 763 0018 0326     		movs	r6, #3
 764 001a 8DF80B60 		strb	r6, [sp, #11]
 364:Src/main.c    ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 765              		.loc 1 364 3 is_stmt 1 view .LVU171
 364:Src/main.c    ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 766              		.loc 1 364 31 is_stmt 0 view .LVU172
 767 001e 0024     		movs	r4, #0
 768 0020 8DF80F40 		strb	r4, [sp, #15]
 365:Src/main.c    ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 769              		.loc 1 365 3 is_stmt 1 view .LVU173
 365:Src/main.c    ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 770              		.loc 1 365 30 is_stmt 0 view .LVU174
 771 0024 8DF80E40 		strb	r4, [sp, #14]
 366:Src/main.c    ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 772              		.loc 1 366 3 is_stmt 1 view .LVU175
 366:Src/main.c    ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 773              		.loc 1 366 30 is_stmt 0 view .LVU176
 774 0028 8DF80D50 		strb	r5, [sp, #13]
 367:Src/main.c    ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL1;
 775              		.loc 1 367 3 is_stmt 1 view .LVU177
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 80


 367:Src/main.c    ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL1;
 776              		.loc 1 367 25 is_stmt 0 view .LVU178
 777 002c 8DF80140 		strb	r4, [sp, #1]
 368:Src/main.c    ****   MPU_InitStruct.SubRegionDisable = 0x00;
 778              		.loc 1 368 3 is_stmt 1 view .LVU179
 368:Src/main.c    ****   MPU_InitStruct.SubRegionDisable = 0x00;
 779              		.loc 1 368 31 is_stmt 0 view .LVU180
 780 0030 8DF80A50 		strb	r5, [sp, #10]
 369:Src/main.c    ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 781              		.loc 1 369 3 is_stmt 1 view .LVU181
 369:Src/main.c    ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 782              		.loc 1 369 35 is_stmt 0 view .LVU182
 783 0034 8DF80940 		strb	r4, [sp, #9]
 370:Src/main.c    **** 
 784              		.loc 1 370 3 is_stmt 1 view .LVU183
 370:Src/main.c    **** 
 785              		.loc 1 370 30 is_stmt 0 view .LVU184
 786 0038 8DF80C40 		strb	r4, [sp, #12]
 372:Src/main.c    ****   
 787              		.loc 1 372 3 is_stmt 1 view .LVU185
 788 003c 6846     		mov	r0, sp
 789 003e FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 790              	.LVL51:
 375:Src/main.c    ****   MPU_InitStruct.BaseAddress = 0x2004C000;
 791              		.loc 1 375 3 view .LVU186
 375:Src/main.c    ****   MPU_InitStruct.BaseAddress = 0x2004C000;
 792              		.loc 1 375 25 is_stmt 0 view .LVU187
 793 0042 8DF80050 		strb	r5, [sp]
 376:Src/main.c    ****   MPU_InitStruct.Size = MPU_REGION_SIZE_256B;
 794              		.loc 1 376 3 is_stmt 1 view .LVU188
 376:Src/main.c    ****   MPU_InitStruct.Size = MPU_REGION_SIZE_256B;
 795              		.loc 1 376 30 is_stmt 0 view .LVU189
 796 0046 0197     		str	r7, [sp, #4]
 377:Src/main.c    ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 797              		.loc 1 377 3 is_stmt 1 view .LVU190
 377:Src/main.c    ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 798              		.loc 1 377 23 is_stmt 0 view .LVU191
 799 0048 0723     		movs	r3, #7
 800 004a 8DF80830 		strb	r3, [sp, #8]
 378:Src/main.c    ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;
 801              		.loc 1 378 3 is_stmt 1 view .LVU192
 378:Src/main.c    ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;
 802              		.loc 1 378 35 is_stmt 0 view .LVU193
 803 004e 8DF80B60 		strb	r6, [sp, #11]
 379:Src/main.c    ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 804              		.loc 1 379 3 is_stmt 1 view .LVU194
 379:Src/main.c    ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 805              		.loc 1 379 31 is_stmt 0 view .LVU195
 806 0052 8DF80F50 		strb	r5, [sp, #15]
 380:Src/main.c    ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 807              		.loc 1 380 3 is_stmt 1 view .LVU196
 380:Src/main.c    ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 808              		.loc 1 380 30 is_stmt 0 view .LVU197
 809 0056 8DF80E40 		strb	r4, [sp, #14]
 381:Src/main.c    ****   MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 810              		.loc 1 381 3 is_stmt 1 view .LVU198
 381:Src/main.c    ****   MPU_InitStruct.Number = MPU_REGION_NUMBER1;
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 81


 811              		.loc 1 381 30 is_stmt 0 view .LVU199
 812 005a 8DF80D50 		strb	r5, [sp, #13]
 382:Src/main.c    ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 813              		.loc 1 382 3 is_stmt 1 view .LVU200
 382:Src/main.c    ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 814              		.loc 1 382 25 is_stmt 0 view .LVU201
 815 005e 8DF80150 		strb	r5, [sp, #1]
 383:Src/main.c    ****   MPU_InitStruct.SubRegionDisable = 0x00;
 816              		.loc 1 383 3 is_stmt 1 view .LVU202
 383:Src/main.c    ****   MPU_InitStruct.SubRegionDisable = 0x00;
 817              		.loc 1 383 31 is_stmt 0 view .LVU203
 818 0062 8DF80A40 		strb	r4, [sp, #10]
 384:Src/main.c    ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 819              		.loc 1 384 3 is_stmt 1 view .LVU204
 384:Src/main.c    ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 820              		.loc 1 384 35 is_stmt 0 view .LVU205
 821 0066 8DF80940 		strb	r4, [sp, #9]
 385:Src/main.c    **** 
 822              		.loc 1 385 3 is_stmt 1 view .LVU206
 385:Src/main.c    **** 
 823              		.loc 1 385 30 is_stmt 0 view .LVU207
 824 006a 8DF80C40 		strb	r4, [sp, #12]
 387:Src/main.c    ****   
 825              		.loc 1 387 3 is_stmt 1 view .LVU208
 826 006e 6846     		mov	r0, sp
 827 0070 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 828              	.LVL52:
 390:Src/main.c    **** }
 829              		.loc 1 390 3 view .LVU209
 830 0074 0420     		movs	r0, #4
 831 0076 FFF7FEFF 		bl	HAL_MPU_Enable
 832              	.LVL53:
 391:Src/main.c    **** 
 833              		.loc 1 391 1 is_stmt 0 view .LVU210
 834 007a 05B0     		add	sp, sp, #20
 835              	.LCFI14:
 836              		.cfi_def_cfa_offset 20
 837              		@ sp needed
 838 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 839              	.L38:
 840 007e 00BF     		.align	2
 841              	.L37:
 842 0080 00C00420 		.word	537182208
 843              		.cfi_endproc
 844              	.LFE178:
 846              		.section	.text.SystemClock_Config,"ax",%progbits
 847              		.align	1
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 851              		.fpu fpv5-sp-d16
 853              	SystemClock_Config:
 854              	.LFB176:
 296:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 855              		.loc 1 296 1 is_stmt 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 72
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 82


 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859 0000 00B5     		push	{lr}
 860              	.LCFI15:
 861              		.cfi_def_cfa_offset 4
 862              		.cfi_offset 14, -4
 863 0002 93B0     		sub	sp, sp, #76
 864              	.LCFI16:
 865              		.cfi_def_cfa_offset 80
 297:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 866              		.loc 1 297 3 view .LVU212
 298:Src/main.c    **** 
 867              		.loc 1 298 3 view .LVU213
 301:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 868              		.loc 1 301 3 view .LVU214
 301:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 869              		.loc 1 301 36 is_stmt 0 view .LVU215
 870 0004 0123     		movs	r3, #1
 871 0006 0193     		str	r3, [sp, #4]
 302:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
 872              		.loc 1 302 3 is_stmt 1 view .LVU216
 302:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
 873              		.loc 1 302 30 is_stmt 0 view .LVU217
 874 0008 4FF48033 		mov	r3, #65536
 875 000c 0293     		str	r3, [sp, #8]
 303:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 876              		.loc 1 303 3 is_stmt 1 view .LVU218
 303:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 877              		.loc 1 303 30 is_stmt 0 view .LVU219
 878 000e 0023     		movs	r3, #0
 879 0010 0493     		str	r3, [sp, #16]
 304:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 880              		.loc 1 304 3 is_stmt 1 view .LVU220
 304:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 881              		.loc 1 304 34 is_stmt 0 view .LVU221
 882 0012 0223     		movs	r3, #2
 883 0014 0793     		str	r3, [sp, #28]
 305:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 884              		.loc 1 305 3 is_stmt 1 view .LVU222
 305:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 885              		.loc 1 305 35 is_stmt 0 view .LVU223
 886 0016 4FF48002 		mov	r2, #4194304
 887 001a 0892     		str	r2, [sp, #32]
 306:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 888              		.loc 1 306 3 is_stmt 1 view .LVU224
 306:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 889              		.loc 1 306 30 is_stmt 0 view .LVU225
 890 001c 1922     		movs	r2, #25
 891 001e 0992     		str	r2, [sp, #36]
 307:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 892              		.loc 1 307 3 is_stmt 1 view .LVU226
 307:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 893              		.loc 1 307 30 is_stmt 0 view .LVU227
 894 0020 4FF4C872 		mov	r2, #400
 895 0024 0A92     		str	r2, [sp, #40]
 308:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 896              		.loc 1 308 3 is_stmt 1 view .LVU228
 308:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 83


 897              		.loc 1 308 30 is_stmt 0 view .LVU229
 898 0026 0B93     		str	r3, [sp, #44]
 309:Src/main.c    ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 899              		.loc 1 309 3 is_stmt 1 view .LVU230
 309:Src/main.c    ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 900              		.loc 1 309 30 is_stmt 0 view .LVU231
 901 0028 0923     		movs	r3, #9
 902 002a 0C93     		str	r3, [sp, #48]
 310:Src/main.c    ****   {
 903              		.loc 1 310 3 is_stmt 1 view .LVU232
 310:Src/main.c    ****   {
 904              		.loc 1 310 6 is_stmt 0 view .LVU233
 905 002c 01A8     		add	r0, sp, #4
 906 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 907              	.LVL54:
 310:Src/main.c    ****   {
 908              		.loc 1 310 5 view .LVU234
 909 0032 B0B9     		cbnz	r0, .L44
 316:Src/main.c    ****   {
 910              		.loc 1 316 3 is_stmt 1 view .LVU235
 316:Src/main.c    ****   {
 911              		.loc 1 316 6 is_stmt 0 view .LVU236
 912 0034 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 913              	.LVL55:
 316:Src/main.c    ****   {
 914              		.loc 1 316 5 view .LVU237
 915 0038 A8B9     		cbnz	r0, .L45
 323:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 916              		.loc 1 323 3 is_stmt 1 view .LVU238
 323:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 917              		.loc 1 323 31 is_stmt 0 view .LVU239
 918 003a 0F23     		movs	r3, #15
 919 003c 0D93     		str	r3, [sp, #52]
 324:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 920              		.loc 1 324 3 is_stmt 1 view .LVU240
 324:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 921              		.loc 1 324 34 is_stmt 0 view .LVU241
 922 003e 0223     		movs	r3, #2
 923 0040 0E93     		str	r3, [sp, #56]
 325:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;  
 924              		.loc 1 325 3 is_stmt 1 view .LVU242
 325:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;  
 925              		.loc 1 325 35 is_stmt 0 view .LVU243
 926 0042 0023     		movs	r3, #0
 927 0044 0F93     		str	r3, [sp, #60]
 326:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;  
 928              		.loc 1 326 3 is_stmt 1 view .LVU244
 326:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;  
 929              		.loc 1 326 36 is_stmt 0 view .LVU245
 930 0046 4FF4A053 		mov	r3, #5120
 931 004a 1093     		str	r3, [sp, #64]
 327:Src/main.c    ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 932              		.loc 1 327 3 is_stmt 1 view .LVU246
 327:Src/main.c    ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 933              		.loc 1 327 36 is_stmt 0 view .LVU247
 934 004c 4FF48053 		mov	r3, #4096
 935 0050 1193     		str	r3, [sp, #68]
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 84


 328:Src/main.c    ****   {
 936              		.loc 1 328 3 is_stmt 1 view .LVU248
 328:Src/main.c    ****   {
 937              		.loc 1 328 6 is_stmt 0 view .LVU249
 938 0052 0721     		movs	r1, #7
 939 0054 0DA8     		add	r0, sp, #52
 940 0056 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 941              	.LVL56:
 328:Src/main.c    ****   {
 942              		.loc 1 328 5 view .LVU250
 943 005a 30B9     		cbnz	r0, .L46
 332:Src/main.c    **** 
 944              		.loc 1 332 1 view .LVU251
 945 005c 13B0     		add	sp, sp, #76
 946              	.LCFI17:
 947              		.cfi_remember_state
 948              		.cfi_def_cfa_offset 4
 949              		@ sp needed
 950 005e 5DF804FB 		ldr	pc, [sp], #4
 951              	.L44:
 952              	.LCFI18:
 953              		.cfi_restore_state
 312:Src/main.c    ****   }
 954              		.loc 1 312 5 is_stmt 1 view .LVU252
 955 0062 FFF7FEFF 		bl	Error_Handler
 956              	.LVL57:
 957              	.L45:
 318:Src/main.c    ****   }
 958              		.loc 1 318 5 view .LVU253
 959 0066 FFF7FEFF 		bl	Error_Handler
 960              	.LVL58:
 961              	.L46:
 330:Src/main.c    ****   }
 962              		.loc 1 330 5 view .LVU254
 963 006a FFF7FEFF 		bl	Error_Handler
 964              	.LVL59:
 965              		.cfi_endproc
 966              	.LFE176:
 968              		.section	.text.main,"ax",%progbits
 969              		.align	1
 970              		.global	main
 971              		.syntax unified
 972              		.thumb
 973              		.thumb_func
 974              		.fpu fpv5-sp-d16
 976              	main:
 977              	.LFB171:
  86:Src/main.c    ****   /* Configure the MPU attributes as Device memory for ETH DMA descriptors */
 978              		.loc 1 86 1 view -0
 979              		.cfi_startproc
 980              		@ Volatile: function does not return.
 981              		@ args = 0, pretend = 0, frame = 24
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983 0000 00B5     		push	{lr}
 984              	.LCFI19:
 985              		.cfi_def_cfa_offset 4
 986              		.cfi_offset 14, -4
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 85


 987 0002 87B0     		sub	sp, sp, #28
 988              	.LCFI20:
 989              		.cfi_def_cfa_offset 32
  88:Src/main.c    **** 
 990              		.loc 1 88 3 view .LVU256
 991 0004 FFF7FEFF 		bl	MPU_Config
 992              	.LVL60:
  91:Src/main.c    **** 
 993              		.loc 1 91 3 view .LVU257
 994 0008 FFF7FEFF 		bl	CPU_CACHE_Enable
 995              	.LVL61:
  99:Src/main.c    ****   
 996              		.loc 1 99 3 view .LVU258
 997 000c FFF7FEFF 		bl	HAL_Init
 998              	.LVL62:
 102:Src/main.c    ****   
 999              		.loc 1 102 3 view .LVU259
 1000 0010 FFF7FEFF 		bl	SystemClock_Config
 1001              	.LVL63:
 106:Src/main.c    **** #else
 1002              		.loc 1 106 3 view .LVU260
 1003 0014 01AC     		add	r4, sp, #4
 1004 0016 064D     		ldr	r5, .L50
 1005 0018 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1006 001a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1007 001c 2B68     		ldr	r3, [r5]
 1008 001e 2360     		str	r3, [r4]
 111:Src/main.c    ****   
 1009              		.loc 1 111 3 view .LVU261
 1010 0020 0021     		movs	r1, #0
 1011 0022 01A8     		add	r0, sp, #4
 1012 0024 FFF7FEFF 		bl	osThreadCreate
 1013              	.LVL64:
 114:Src/main.c    ****   
 1014              		.loc 1 114 3 view .LVU262
 1015 0028 FFF7FEFF 		bl	osKernelStart
 1016              	.LVL65:
 1017              	.L48:
 117:Src/main.c    **** }
 1018              		.loc 1 117 3 discriminator 1 view .LVU263
 117:Src/main.c    **** }
 1019              		.loc 1 117 12 discriminator 1 view .LVU264
 117:Src/main.c    **** }
 1020              		.loc 1 117 9 discriminator 1 view .LVU265
 1021 002c FEE7     		b	.L48
 1022              	.L51:
 1023 002e 00BF     		.align	2
 1024              	.L50:
 1025 0030 00000000 		.word	.LANCHOR0
 1026              		.cfi_endproc
 1027              	.LFE171:
 1029              		.comm	gnetif,56,4
 1030              		.section	.rodata
 1031              		.align	2
 1032              		.set	.LANCHOR0,. + 0
 1033              	.LC7:
 1034 0000 00000000 		.word	.LC0
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 86


 1035 0004 00000000 		.word	StartThread
 1036 0008 0000     		.short	0
 1037 000a 0000     		.space	2
 1038 000c 00000000 		.word	0
 1039 0010 80020000 		.word	640
 1040              		.text
 1041              	.Letext0:
 1042              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 1043              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h"
 1044              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types.
 1045              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/inclu
 1046              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.h
 1047              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 1048              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1049              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 1050              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 1051              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 1052              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1053              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1054              		.file 16 "Utilities/Fonts/fonts.h"
 1055              		.file 17 "Middlewares/FreeRTOS/Source/include/queue.h"
 1056              		.file 18 "Middlewares/FreeRTOS/Source/include/semphr.h"
 1057              		.file 19 "Middlewares/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1058              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 1059              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/time.h"
 1060              		.file 22 "Middlewares/LwIP/src/include/lwip/arch.h"
 1061              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 1062              		.file 24 "Middlewares/LwIP/src/include/lwip/err.h"
 1063              		.file 25 "Middlewares/LwIP/src/include/lwip/ip4_addr.h"
 1064              		.file 26 "Middlewares/LwIP/src/include/lwip/ip_addr.h"
 1065              		.file 27 "Middlewares/LwIP/src/include/lwip/pbuf.h"
 1066              		.file 28 "Middlewares/LwIP/src/include/lwip/memp.h"
 1067              		.file 29 "Middlewares/LwIP/src/include/lwip/priv/memp_priv.h"
 1068              		.file 30 "Middlewares/LwIP/src/include/lwip/netif.h"
 1069              		.file 31 "Middlewares/LwIP/system/arch/sys_arch.h"
 1070              		.file 32 "Middlewares/LwIP/src/include/lwip/timeouts.h"
 1071              		.file 33 "Middlewares/LwIP/src/include/lwip/tcpip.h"
 1072              		.file 34 "Middlewares/LwIP/src/include/lwip/netbuf.h"
 1073              		.file 35 "Middlewares/LwIP/src/include/lwip/api.h"
 1074              		.file 36 "Utilities/Log/lcd_log.h"
 1075              		.file 37 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 1076              		.file 38 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
 1077              		.file 39 "<built-in>"
 1078              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 1079              		.file 41 "Inc/httpserver-netconn.h"
 1080              		.file 42 "Middlewares/LwIP/src/include/lwip/sys.h"
 1081              		.file 43 "Inc/app_ethernet.h"
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:15     .rodata.str1.4:0000000000000000 $d
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:22     .text.Error_Handler:0000000000000000 $t
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:29     .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:47     .text.CPU_CACHE_Enable:0000000000000000 $t
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:53     .text.CPU_CACHE_Enable:0000000000000000 CPU_CACHE_Enable
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:301    .text.CPU_CACHE_Enable:000000000000007c $d
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:306    .rodata.tcpecho_thread.str1.4:0000000000000000 $d
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:310    .text.tcpecho_thread:0000000000000000 $t
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:316    .text.tcpecho_thread:0000000000000000 tcpecho_thread
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:476    .text.tcpecho_thread:00000000000000a8 $d
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:483    .rodata.BSP_Config.str1.4:0000000000000000 $d
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:493    .text.BSP_Config:0000000000000000 $t
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:499    .text.BSP_Config:0000000000000000 BSP_Config
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:552    .text.BSP_Config:000000000000003c $d
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:562    .text.Netif_Config:0000000000000000 $t
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:568    .text.Netif_Config:0000000000000000 Netif_Config
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:643    .text.Netif_Config:0000000000000054 $d
                            *COM*:0000000000000038 gnetif
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:651    .rodata.StartThread.str1.4:0000000000000000 $d
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:655    .text.StartThread:0000000000000000 $t
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:661    .text.StartThread:0000000000000000 StartThread
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:715    .text.StartThread:0000000000000038 $d
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:722    .text.MPU_Config:0000000000000000 $t
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:728    .text.MPU_Config:0000000000000000 MPU_Config
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:842    .text.MPU_Config:0000000000000080 $d
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:847    .text.SystemClock_Config:0000000000000000 $t
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:853    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:969    .text.main:0000000000000000 $t
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:976    .text.main:0000000000000000 main
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:1025   .text.main:0000000000000030 $d
/var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s:1031   .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
netconn_new_with_proto_and_callback
netconn_bind
netconn_listen_with_backlog
netbuf_data
netconn_write_partly
memcpy
printf
netbuf_next
netbuf_delete
netconn_recv
netconn_close
netconn_delete
netconn_accept
LCD_LineColor
BSP_LCD_Init
BSP_LCD_LayerDefaultInit
BSP_LCD_SelectLayer
BSP_LCD_SetFont
LCD_LOG_Init
LCD_LOG_SetHeader
LCD_LOG_SetFooter
puts
ARM GAS  /var/folders/yz/w8msd8211qzc60m57tpkzbn80000gn/T//ccwi1CfG.s 			page 88


Font24
netif_add
netif_set_default
netif_set_up
netif_set_down
tcpip_input
ethernetif_init
tcpip_init
http_server_netconn_init
sys_thread_new
User_notification
osThreadTerminate
HAL_MPU_Disable
HAL_MPU_ConfigRegion
HAL_MPU_Enable
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
osThreadCreate
osKernelStart
